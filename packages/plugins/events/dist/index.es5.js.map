{"version":3,"file":"index.es5.js","sources":["../../../core/dist/GondelPluginUtils.js","../../../core/dist/GondelDomUtils.js","../../../core/dist/GondelEventRegistry.js","index.js"],"sourcesContent":["var basePluginListener = function (result, data, next) { return next(result); };\n// Global plugin events registry\nvar pluginEventRegistry = window.__gondelPluginEvents || { pluginMapping: {}, pluginEvents: {} };\nwindow.__gondelPluginEvents = pluginEventRegistry;\n/** Global Plugin Event Handler Registry */\nexport var pluginEvents = pluginEventRegistry.pluginEvents;\n// Mapping to track if plugin was already registered to prevent double registrations\nvar pluginMapping = pluginEventRegistry.pluginMapping;\nexport function fireGondelPluginEvent(eventName, initialValue, data, callback) {\n    var isSyncron = false;\n    var callbackResult;\n    // Execute all bound events for the given name\n    // if they exist\n    (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (processedResult) {\n        isSyncron = true;\n        callbackResult = callback ? callback(processedResult) : processedResult;\n    });\n    // Add a guard to prevent asyncron plugin listeners\n    // to simplify the usage of fireGondelPluginEvent\n    if (!isSyncron) {\n        throw new Error(\"Async plugin listener\");\n    }\n    return callbackResult;\n}\n/**\n * Fire an async event which allows gondel plugins to add features to gondel\n */\nexport function fireAsyncGondelPluginEvent(eventName, initialValue, data) {\n    return new Promise(function (resolve) {\n        (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (result) {\n            resolve(result);\n        });\n    });\n}\n/**\n * Allow plugins to hook into the gondel event system\n */\nexport function addGondelPluginEventListener(pluginName, eventName, eventListenerCallback) {\n    // Prevent any event registration if this pluginHandlerName\n    // has already been used\n    var pluginHandlerNamePerEvent = eventName + \"#\" + pluginName;\n    if (pluginMapping[pluginHandlerNamePerEvent]) {\n        return;\n    }\n    // Flag plugin as registered\n    pluginMapping[pluginHandlerNamePerEvent] = true;\n    // Ensure that an entry for the given event name exists\n    if (!pluginEvents[eventName]) {\n        pluginEvents[eventName] = basePluginListener;\n    }\n    var previousEventHandler = pluginEvents[eventName];\n    pluginEvents[eventName] = function wrapCallback(result, data, next) {\n        previousEventHandler(result, data, function callNextPlugin(modifiedResult, _, firstNext) {\n            eventListenerCallback(modifiedResult, data, function bindData(result) {\n                next(result, data, firstNext);\n            });\n        });\n    };\n}\n//# sourceMappingURL=GondelPluginUtils.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\nexport var internalGondelRefAttribute = \"_gondel_\";\nexport var internalGondelAsyncRefAttribute = \"_gondelA_\";\n/**\n * Returns true if the given object is a single Element\n */\nfunction isElement(domNode) {\n    return domNode.nodeType !== undefined;\n}\n/**\n * This function normalizes takes one of the following:\n *  + document query result\n *  + dom node array\n *  + jquery object\n *  + a single dom node\n * and turns it into a single dom node\n */\nexport function getFirstDomNode(domNode) {\n    if (isElement(domNode)) {\n        return domNode;\n    }\n    return domNode[0];\n}\n/**\n * Start all nodes in the given context\n */\nexport function startComponents(domContext, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var registry = getComponentRegistry(namespace);\n    return startComponentsFromRegistry(registry, domContext ? getFirstDomNode(domContext) : document.documentElement, namespace);\n}\n/**\n * Stop all nodes in the given context\n */\nexport function stopComponents(domContext, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var components = findComponents(domContext, undefined, namespace);\n    if (domContext && hasMountedGondelComponent(domContext)) {\n        components.unshift(getComponentByDomNode(domContext));\n    }\n    components.forEach(function (component) { return component.stop(); });\n}\n/**\n * Checks if a component is mounted on a certain DOM node\n */\nexport function hasMountedGondelComponent(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var gondelComponent = firstNode[internalGondelRefAttribute + namespace];\n    if (!gondelComponent || !gondelComponent._ctx) {\n        // no anchor prop found or ctx missing. function is needed\n        // that we can type the `getComponentByDomNode` without possible\n        // returnal of undefined.\n        return false;\n    }\n    return true;\n}\n/**\n * Returns the gondel instance for the given HtmlELement\n */\nexport function getComponentByDomNode(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var gondelComponent = extractComponent(getFirstDomNode(domNode), namespace);\n    if (!gondelComponent) {\n        throw new Error(\"Could not find a started gondel component in namespace \\\"\" + namespace + \"\\\",\\nplease check if your component is mounted via 'hasMountedGondelComponent'\");\n    }\n    return gondelComponent;\n}\n/**\n * Internal helper function of getComponentByDomNode\n *\n * Returns the gondel instance from a known HtmlElement\n * This function is an internal helper with a possible undefined\n * return value.\n */\nexport function extractComponent(element, namespace) {\n    var gondelComponent = element[internalGondelRefAttribute + namespace];\n    // Stop if this dom node is not known to gondel\n    if (gondelComponent && gondelComponent._ctx) {\n        return gondelComponent;\n    }\n}\n/**\n * Returns the gondel instance for the given HtmlELement once it is booted\n */\nexport function getComponentByDomNodeAsync(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var gondelComponent = firstNode[internalGondelAsyncRefAttribute + namespace];\n    // Stop if this dom node is not known to gondel\n    if (!gondelComponent) {\n        return Promise.reject(undefined);\n    }\n    // or the component is already booted up return it\n    if (gondelComponent._ctx) {\n        return Promise.resolve(gondelComponent);\n    }\n    // Wait the component to boot up and return it\n    return gondelComponent.then(function () { return firstNode[internalGondelRefAttribute + namespace]; });\n}\n/**\n * Returns all components inside the given node\n */\nexport function findComponents(domNode, componentName, namespace) {\n    if (domNode === void 0) { domNode = document.documentElement; }\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var components = [];\n    var attribute = \"_gondel_\" + namespace;\n    var nodes = firstNode.querySelectorAll(\"[data-\" + namespace + \"-name\" + (componentName ? \"=\\\"\" + componentName + \"\\\"\" : \"\") + \"]\");\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        var gondelComponentInstance = node[attribute];\n        // Verify that the component is fully booted\n        if (gondelComponentInstance && gondelComponentInstance._ctx === node) {\n            components.push(gondelComponentInstance);\n        }\n    }\n    return components;\n}\n//# sourceMappingURL=GondelDomUtils.js.map","/**\n * The event registry provides a way to bind events ahead of time\n * with a very small foot print during launch to improve the time to interaction\n */\nimport { extractComponent } from \"./GondelDomUtils\";\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\n/**\n * Only real browser events are supported.\n * Unfortunately focus and blur do not bubble so a special mapping is needed.\n */\nvar eventNameMapping = {\n    focus: \"focusin\",\n    blur: \"focusout\"\n};\n// Polyfill for element.prototype.matches\nvar matchesCssSelector = function (element, selector) {\n    var elementPrototype = window.Element.prototype;\n    /* istanbul ignore next : Browser polyfill can't be tested */\n    var elementMatches = elementPrototype.matches ||\n        elementPrototype.matchesSelector ||\n        elementPrototype.mozMatchesSelector ||\n        elementPrototype.msMatchesSelector ||\n        elementPrototype.webkitMatchesSelector;\n    // Cache the function and call it\n    return (matchesCssSelector = function (element, selector) {\n        return elementMatches.call(element, selector);\n    })(element, selector);\n};\nfunction getParentElements(startElement) {\n    var nodes = [];\n    for (var element = startElement; element; element = element.parentElement) {\n        nodes.push(element);\n    }\n    return nodes;\n}\n/**\n * Returns an array of all handlers which would apply for the current target\n */\nexport function getHandlers(attributeName, eventHandlerRegistry, target) {\n    var parents = getParentElements(target);\n    // Find all selectors which have been registred for this event type\n    // and which have a gondel component in one of the parrent nodes\n    var selectorsOfFoundComponents = [];\n    parents.forEach(function (parent, i) {\n        var componentName = parent.getAttribute(attributeName);\n        var handlers = componentName && eventHandlerRegistry[componentName];\n        if (handlers) {\n            // Store the index where the component was found to know in which part\n            // of the dom tree the selectors could be found\n            selectorsOfFoundComponents.push({ index: i, handlers: handlers });\n        }\n    });\n    // Iterate over all possible selectors to find out if the current event\n    // should fire any gondel handler\n    var handlerQueue = [];\n    selectorsOfFoundComponents.forEach(function (_a) {\n        var index = _a.index, handlers = _a.handlers;\n        var selectorNames = Object.keys(handlers);\n        selectorNames.forEach(function (selectorName) {\n            // If no selector is given the handler does always match\n            if (!selectorName) {\n                return handlerQueue.push({\n                    index: index,\n                    ctx: parents[index],\n                    target: parents[index],\n                    handlerOptions: handlers[selectorName]\n                });\n            }\n            // Iterate backwards over the children of the component to find an element\n            // which matches the selector for the current handler\n            for (var i = index; --i >= 0;) {\n                if (matchesCssSelector(parents[i], selectorName)) {\n                    return handlerQueue.push({\n                        index: i,\n                        ctx: parents[index],\n                        target: parents[i],\n                        handlerOptions: handlers[selectorName]\n                    });\n                }\n            }\n        });\n    });\n    // Break if we couldn't find any matching element\n    if (handlerQueue.length === 0) {\n        return [];\n    }\n    // Sort the queue so events which are further up the dom are fired first\n    handlerQueue.sort(function (handlerA, handlerB) {\n        return handlerA.index > handlerB.index ? 1 : handlerA.index === handlerB.index ? 0 : -1;\n    });\n    return handlerQueue;\n}\n/**\n * The handler which will catch every event at the documentElement\n */\nfunction handleEvent(namespace, attributeName, eventHandlerRegistry, event) {\n    var target = event.target;\n    var handlers = getHandlers(attributeName, eventHandlerRegistry, target);\n    executeHandlers(handlers, event, namespace);\n}\nvar _domEventRegistry;\n/**\n * Returns the namespace registry for the given namespace..\n * This function must be used only by core or plugins\n */\nexport function getEventRegistry(namespace) {\n    if (!_domEventRegistry) {\n        _domEventRegistry = window[\"__\\ud83d\\udea1DomEvents\"] || {};\n        window[\"__\\ud83d\\udea1DomEvents\"] = _domEventRegistry;\n    }\n    if (!_domEventRegistry[namespace]) {\n        _domEventRegistry[namespace] = {};\n    }\n    return _domEventRegistry[namespace];\n}\n/**\n * Notify components\n * This function must be used by core or only by plugins\n */\nexport function executeHandlers(handlers, event, namespace) {\n    /** Store wether the original Event was modified to provide the correct currentTarget */\n    var eventObjectRequiresCleanup = false;\n    /** Store optional callback results which are executed together to allow grouped redraws */\n    var results = [];\n    var _loop_1 = function (i) {\n        var handlerObject = handlers[i];\n        var handlerOptions = handlerObject.handlerOptions;\n        var gondelComponent = extractComponent(handlerObject.ctx, namespace);\n        // Skip if the component wasn't started or if it was stopped\n        if (gondelComponent) {\n            // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\n            Object.defineProperty(event, \"currentTarget\", {\n                get: function () { return handlerObject.target; },\n                configurable: true\n            });\n            eventObjectRequiresCleanup = true;\n            for (var j = 0; j < handlerOptions.length && !event.cancelBubble; j++) {\n                var handlerResult = gondelComponent[handlerOptions[j].handlerName].call(gondelComponent, event);\n                if (typeof handlerResult === \"function\") {\n                    results.push(handlerResult);\n                }\n            }\n        }\n    };\n    for (var i = 0; i < handlers.length && !event.cancelBubble; i++) {\n        _loop_1(i);\n    }\n    // Execute all callbacks to allow grouping write events\n    results.forEach(function (result) {\n        result();\n    });\n    // Cleanup the event object\n    if (eventObjectRequiresCleanup) {\n        // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\n        delete event.currentTarget;\n    }\n}\n/**\n * Add a event lister to the <html> element\n * The listener will always call handleEvent with the domEventRegistry for the given event\n */\nfunction startListeningForEvent(eventName, namespace) {\n    document.documentElement.addEventListener(eventNameMapping[eventName] || eventName, handleEvent.bind(null, namespace, \"data-\" + namespace + \"-name\", getEventRegistry(namespace)[eventName]));\n}\n/**\n * Add an event to the Gondel EventRegistry\n */\nexport function addRootEventListener(namespace, domEventName, gondelComponentName, handlerName, handlerOption) {\n    // Create namespace if neededi\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    // Notify all plugins to allow taking over the event handling for a specific event name\n    // This notification is only triggered if a event name e.g. 'click' is used for the first time\n    if (!namespacedDomEventRegistry[domEventName]) {\n        namespacedDomEventRegistry[domEventName] = {};\n        fireGondelPluginEvent(\"registerEvent\", true, {\n            eventName: domEventName,\n            namespace: namespace,\n            eventRegistry: namespacedDomEventRegistry[domEventName]\n        }, function (isNativeEvent) {\n            // If no plugin registered the event\n            // register a native browser event\n            if (isNativeEvent) {\n                startListeningForEvent(domEventName, namespace);\n            }\n        });\n    }\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName] = {};\n    }\n    var handlerOptionObject = typeof handlerOption === \"object\" ? handlerOption : { selector: handlerOption };\n    var selectorKey = handlerOptionObject.selector || \"\";\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = [];\n    }\n    namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].push(Object.assign({ handlerName: handlerName, handlerOption: handlerOption }));\n}\n/**\n * Remove an event from the Gondel EventRegistry\n */\nexport function removeRootEventListener(namespace, domEventName, gondelComponentName, handlerName, selector) {\n    var selectorKey = selector || \"\";\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    if (namespacedDomEventRegistry[domEventName] &&\n        namespacedDomEventRegistry[domEventName][gondelComponentName] &&\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].filter(function (handlerOption) {\n            return handlerOption.handlerName !== handlerName || handlerName === undefined;\n        });\n    }\n}\n/**\n * Remove all events for a given Component (e.g. a Button) from the Gondel EventRegistry\n */\nexport function removeRootEventListernerForComponent(namespace, gondelComponentName) {\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    for (var eventName in namespacedDomEventRegistry) {\n        /* istanbul ignore else: for in savety check */\n        if (namespacedDomEventRegistry.hasOwnProperty(eventName)) {\n            delete namespacedDomEventRegistry[eventName][gondelComponentName];\n        }\n    }\n}\n//# sourceMappingURL=GondelEventRegistry.js.map","/**\n * This is a demo plugin which adds custom events\n */\nimport { addGondelPluginEventListener, getComponentByDomNode } from \"@gondel/core\";\nimport { getHandlers, executeHandlers } from \"@gondel/core/dist/GondelEventRegistry\";\n/**\n * This function returns all components for the given eventRegistry which can be found in the dom.\n */\nfunction getComponentsInEventRegistry(eventRegistry, namespace) {\n    var selector = Object.keys(eventRegistry)\n        .map(function (componentName) { return \"[data-\" + namespace + \"-name=\\\"\" + componentName + \"\\\"]\"; })\n        .join(\",\");\n    if (!selector) {\n        return [];\n    }\n    var componentElements = document.documentElement.querySelectorAll(selector);\n    var components = [];\n    for (var i = 0; i < componentElements.length; i++) {\n        var component = getComponentByDomNode(componentElements[i], namespace);\n        if (component) {\n            components.push(component);\n        }\n    }\n    return components;\n}\nvar customEvents = {\n    /**\n     * Add @EventListener('resize')\n     *\n     * This will allow components to listen for throttled window resize events\n     * The resize event will only be fired for a component if the width or the height of the component changed\n     */\n    resize: function (eventRegistry, namespace) {\n        var isRunning = false;\n        var frameIsRequested = false;\n        var resizeDoneTimer;\n        var componentInformation;\n        /**\n         * This handler is called if a new resize event happens.\n         * A resize event is new if no resize occured for 250ms\n         */\n        function startResizeWatching(event) {\n            var components = getComponentsInEventRegistry(eventRegistry, namespace);\n            isRunning = true;\n            // The resize listener is fired very often\n            // for performance optimisations we search and store\n            // all components during the initial start event\n            componentInformation = components.map(function (component) {\n                var size = component.__resizeSize || {\n                    width: 0,\n                    height: 0\n                };\n                var gondelComponentHandlers = eventRegistry[component._componentName];\n                return {\n                    component: component,\n                    node: component._ctx,\n                    selectors: Object.keys(gondelComponentHandlers).map(function (selector) {\n                        return gondelComponentHandlers[selector].map(function (handlerOption) { return component[handlerOption.handlerName]; });\n                    }),\n                    width: size.width,\n                    height: size.height\n                };\n            });\n            fireResizeEvent(event);\n        }\n        /**\n         * Clean up after no resize event happened for 250ms\n         */\n        function stopResizeWatching() {\n            // If there is still a throttled resize handler\n            // wait until it is done\n            if (frameIsRequested) {\n                requestAnimationFrame(stopResizeWatching);\n                return;\n            }\n            // Memory cleanup\n            isRunning = false;\n            componentInformation = undefined;\n        }\n        /**\n         * Check which modules changed in size an call their event handler\n         */\n        function fireResizeEvent(event) {\n            frameIsRequested = false;\n            if (!componentInformation) {\n                return;\n            }\n            var newSizes = componentInformation.map(function (_a) {\n                var node = _a.node;\n                return ({\n                    width: node.clientWidth,\n                    height: node.clientHeight\n                });\n            });\n            var handlerResults = [];\n            componentInformation.forEach(function (componentInformation, i) {\n                var newSize = newSizes[i];\n                // Skip if the size did not change\n                if (newSize.width === componentInformation.width &&\n                    newSize.height === componentInformation.height) {\n                    return;\n                }\n                // Skip if the component is not running anymore\n                if (componentInformation.component._stopped) {\n                    return;\n                }\n                componentInformation.component.__resizeSize = newSize;\n                componentInformation.width = newSize.width;\n                componentInformation.height = newSize.height;\n                componentInformation.selectors.forEach(function (selector) {\n                    return selector.forEach(function (handler) {\n                        return handlerResults.push(handler.call(componentInformation.component, event, newSize));\n                    });\n                });\n            });\n            handlerResults.forEach(function (handlerResult) {\n                if (typeof handlerResult === \"function\") {\n                    handlerResult();\n                }\n            });\n        }\n        window.addEventListener(\"resize\", function (event) {\n            if (!isRunning) {\n                startResizeWatching(event);\n            }\n            else if (!frameIsRequested) {\n                frameIsRequested = true;\n                window.requestAnimationFrame(fireResizeEvent.bind(event));\n            }\n            clearTimeout(resizeDoneTimer);\n            resizeDoneTimer = setTimeout(stopResizeWatching, 250);\n        });\n    },\n    /**\n     * Add @EventListener('key')\n     * Add @EventListener('key', 'Escape')\n     *\n     * This will allow components to listen for global key press events\n     * For a full list of possible keys see:\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n     */\n    key: function (eventRegistry, namespace) {\n        window.addEventListener(\"keydown\", function (event) {\n            var components = getComponentsInEventRegistry(eventRegistry, namespace);\n            var handlerResults = [];\n            components.forEach(function (component) {\n                var gondelComponentHandlers = Object.keys(eventRegistry[component._componentName]).forEach(function (selector) {\n                    if (selector === \"\" || event.key === selector) {\n                        eventRegistry[component._componentName][selector].forEach(function (handlerOption) {\n                            handlerResults.push(component[handlerOption.handlerName].call(component, event));\n                        });\n                    }\n                });\n            });\n            handlerResults.forEach(function (handlerResult) {\n                if (typeof handlerResult === \"function\") {\n                    handlerResult();\n                }\n            });\n        });\n    },\n    /**\n     * Add @EventListener('swipe-left')\n     *\n     * This will allow components to listen for mouse swipe events\n     */\n    \"swipe-left\": function (eventRegistry, namespace) {\n        document.documentElement.addEventListener(\"mousedown\", function (mouseDownEvent) {\n            var handlers = getHandlers(\"data-\" + namespace + \"-name\", eventRegistry, mouseDownEvent.target);\n            var latestMouseMoveEvent;\n            var frameListernerId;\n            if (handlers.length === 0) {\n                return;\n            }\n            mouseDownEvent.preventDefault();\n            function handleMouseMove(mouseMoveEvent) {\n                latestMouseMoveEvent = mouseMoveEvent;\n                mouseMoveEvent.preventDefault();\n                if (!frameListernerId) {\n                    frameListernerId = requestAnimationFrame(handleMouseMoveThrottled);\n                }\n            }\n            function handleMouseMoveThrottled() {\n                frameListernerId = undefined;\n                var deltaX = latestMouseMoveEvent.x - mouseDownEvent.x;\n                if (deltaX < -100) {\n                    executeHandlers(handlers, latestMouseMoveEvent, namespace);\n                    stopMouseMoveTracking();\n                }\n            }\n            function stopMouseMoveTracking() {\n                document.documentElement.removeEventListener(\"mousemove\", handleMouseMove);\n                document.documentElement.removeEventListener(\"mouseup\", handleMouseUp);\n                if (frameListernerId) {\n                    cancelAnimationFrame(frameListernerId);\n                }\n            }\n            function handleMouseUp(mouseMoveUpEvent) {\n                mouseMoveUpEvent.preventDefault();\n                stopMouseMoveTracking();\n            }\n            document.documentElement.addEventListener(\"mousemove\", handleMouseMove);\n            document.documentElement.addEventListener(\"mouseup\", handleMouseUp);\n        });\n    },\n    /**\n     * Add @EventListener('swipe-right')\n     *\n     * This will allow components to listen for mouse swipe events\n     */\n    \"swipe-right\": function (eventRegistry, namespace) {\n        document.documentElement.addEventListener(\"mousedown\", function (mouseDownEvent) {\n            var handlers = getHandlers(\"data-\" + namespace + \"-name\", eventRegistry, mouseDownEvent.target);\n            var latestMouseMoveEvent;\n            var frameListernerId;\n            if (handlers.length === 0) {\n                return;\n            }\n            mouseDownEvent.preventDefault();\n            function handleMouseMove(mouseMoveEvent) {\n                latestMouseMoveEvent = mouseMoveEvent;\n                mouseMoveEvent.preventDefault();\n                if (!frameListernerId) {\n                    frameListernerId = requestAnimationFrame(handleMouseMoveThrottled);\n                }\n            }\n            function handleMouseMoveThrottled() {\n                frameListernerId = undefined;\n                var deltaX = latestMouseMoveEvent.x - mouseDownEvent.x;\n                if (deltaX > 100) {\n                    executeHandlers(handlers, latestMouseMoveEvent, namespace);\n                    stopMouseMoveTracking();\n                }\n            }\n            function stopMouseMoveTracking() {\n                document.documentElement.removeEventListener(\"mousemove\", handleMouseMove);\n                document.documentElement.removeEventListener(\"mouseup\", handleMouseUp);\n                if (frameListernerId) {\n                    cancelAnimationFrame(frameListernerId);\n                }\n            }\n            function handleMouseUp(mouseMoveUpEvent) {\n                mouseMoveUpEvent.preventDefault();\n                stopMouseMoveTracking();\n            }\n            document.documentElement.addEventListener(\"mousemove\", handleMouseMove);\n            document.documentElement.addEventListener(\"mouseup\", handleMouseUp);\n        });\n    }\n};\nexport function initEventPlugin() {\n    addGondelPluginEventListener(\"Events\", \"registerEvent\", function addResizeEvent(isNativeEvent, _a, resolve) {\n        var eventName = _a.eventName, namespace = _a.namespace, eventRegistry = _a.eventRegistry;\n        if (customEvents[eventName]) {\n            customEvents[eventName](eventRegistry, namespace);\n            // Tell the event system that it should not listen for the event:\n            resolve(false);\n        }\n        else {\n            resolve(isNativeEvent);\n        }\n    });\n    addGondelPluginEventListener(\"Events\", \"sync\", function addResizeEvent(components, data, resolve) {\n        setTimeout(function () {\n            components.forEach(function (component) {\n                component.__resizeSize = {\n                    width: component._ctx.clientWidth,\n                    height: component._ctx.clientHeight\n                };\n            });\n        });\n        resolve(components);\n    });\n}\n//# sourceMappingURL=index.js.map"],"names":["basePluginListener","result","data","next","pluginEventRegistry","window","__gondelPluginEvents","pluginMapping","pluginEvents","addGondelPluginEventListener","pluginName","eventName","eventListenerCallback","pluginHandlerNamePerEvent","previousEventHandler","modifiedResult","_","firstNext","internalGondelRefAttribute","getComponentByDomNode","domNode","namespace","gondelComponent","extractComponent","undefined","nodeType","isElement","getFirstDomNode","Error","element","_ctx","matchesCssSelector","selector","elementPrototype","Element","prototype","elementMatches","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","webkitMatchesSelector","call","getHandlers","attributeName","eventHandlerRegistry","target","parents","startElement","nodes","parentElement","push","getParentElements","selectorsOfFoundComponents","forEach","parent","i","componentName","getAttribute","handlers","index","handlerQueue","_a","Object","keys","selectorName","ctx","handlerOptions","length","sort","handlerA","handlerB","executeHandlers","event","eventObjectRequiresCleanup","results","_loop_1","handlerObject","defineProperty","get","configurable","j","cancelBubble","handlerResult","handlerName","currentTarget","getComponentsInEventRegistry","eventRegistry","map","join","componentElements","document","documentElement","querySelectorAll","components","component","customEvents","resize","resizeDoneTimer","componentInformation","isRunning","frameIsRequested","stopResizeWatching","requestAnimationFrame","fireResizeEvent","newSizes","node","width","clientWidth","height","clientHeight","handlerResults","newSize","_stopped","__resizeSize","selectors","handler","addEventListener","bind","size","gondelComponentHandlers","_componentName","handlerOption","startResizeWatching","clearTimeout","setTimeout","key","swipe-left","mouseDownEvent","latestMouseMoveEvent","frameListernerId","handleMouseMove","mouseMoveEvent","preventDefault","handleMouseMoveThrottled","x","stopMouseMoveTracking","removeEventListener","handleMouseUp","cancelAnimationFrame","mouseMoveUpEvent","swipe-right","isNativeEvent","resolve"],"mappings":"+MAAA,IAAIA,EAAqB,SAAUC,EAAQC,EAAMC,GAAQ,OAAOA,EAAKF,IAEjEG,EAAsBC,OAAOC,sBAAwB,CAAEC,cAAe,GAAIC,aAAc,IAGjFA,GAFXH,OAAOC,qBAAuBF,GAEgBI,aAE1CD,EAAgBH,EAAoBG,cA8BjC,SAASE,EAA6BC,EAAYC,EAAWC,GAGhE,IAAIC,EAA4BF,EAAY,IAAMD,EAClD,IAAIH,EAAcM,GAAlB,CAIAN,EAAcM,IAA6B,EAEtCL,EAAaG,KACdH,EAAaG,GAAaX,GAE9B,IAAIc,EAAuBN,EAAaG,GACxCH,EAAaG,GAAa,SAAsBV,EAAQC,EAAMC,GAC1DW,EAAqBb,EAAQC,EAAM,SAAwBa,EAAgBC,EAAGC,GAC1EL,EAAsBG,EAAgBb,EAAM,SAAkBD,GAC1DE,EAAKF,EAAQC,EAAMe,SCpD5B,IAAIC,EAA6B,WA2DjC,SAASC,EAAsBC,EAASC,QACzB,IAAdA,IAAwBA,EAAY,KACxC,IAAIC,EAAkBC,EA7CnB,SAAyBH,GAC5B,OAZJ,SAAmBA,GACf,YAA4BI,IAArBJ,EAAQK,SAWXC,CAAUN,GACHA,EAEJA,EAAQ,GAyCwBO,CAAgBP,GAAUC,GACjE,IAAKC,EACD,MAAM,IAAIM,MAAM,2DAA8DP,EAAY,kFAE9F,OAAOC,EASJ,SAASC,EAAiBM,EAASR,GACtC,IAAIC,EAAkBO,EAAQX,EAA6BG,GAE3D,GAAIC,GAAmBA,EAAgBQ,KACnC,OAAOR,ECjEf,IAAIS,EAAqB,SAAUF,EAASG,GACxC,IAAIC,EAAmB5B,OAAO6B,QAAQC,UAElCC,EAAiBH,EAAiBI,SAClCJ,EAAiBK,iBACjBL,EAAiBM,oBACjBN,EAAiBO,mBACjBP,EAAiBQ,sBAErB,OAAQV,EAAqB,SAAUF,EAASG,GAC5C,OAAOI,EAAeM,KAAKb,EAASG,KACrCH,EAASG,IAYT,SAASW,EAAYC,EAAeC,EAAsBC,GAC7D,IAAIC,EAXR,SAA2BC,GAEvB,IADA,IAAIC,EAAQ,GACHpB,EAAUmB,EAAcnB,EAASA,EAAUA,EAAQqB,cACxDD,EAAME,KAAKtB,GAEf,OAAOoB,EAMOG,CAAkBN,GAG5BO,EAA6B,GACjCN,EAAQO,QAAQ,SAAUC,EAAQC,GAC9B,IAAIC,EAAgBF,EAAOG,aAAad,GACpCe,EAAWF,GAAiBZ,EAAqBY,GACjDE,GAGAN,EAA2BF,KAAK,CAAES,MAAOJ,EAAGG,SAAUA,MAK9D,IAAIE,EAAe,GA6BnB,OA5BAR,EAA2BC,QAAQ,SAAUQ,GACzC,IAAIF,EAAQE,EAAGF,MAAOD,EAAWG,EAAGH,SAChBI,OAAOC,KAAKL,GAClBL,QAAQ,SAAUW,GAE5B,IAAKA,EACD,OAAOJ,EAAaV,KAAK,CACrBS,MAAOA,EACPM,IAAKnB,EAAQa,GACbd,OAAQC,EAAQa,GAChBO,eAAgBR,EAASM,KAKjC,IAAK,IAAIT,EAAII,EAAc,KAALJ,GAClB,GAAIzB,EAAmBgB,EAAQS,GAAIS,GAC/B,OAAOJ,EAAaV,KAAK,CACrBS,MAAOJ,EACPU,IAAKnB,EAAQa,GACbd,OAAQC,EAAQS,GAChBW,eAAgBR,EAASM,SAOjB,IAAxBJ,EAAaO,OACN,IAGXP,EAAaQ,KAAK,SAAUC,EAAUC,GAClC,OAAOD,EAASV,MAAQW,EAASX,MAAQ,EAAIU,EAASV,QAAUW,EAASX,MAAQ,GAAK,IAEnFC,GA6BJ,SAASW,EAAgBb,EAAUc,EAAOpD,GAyB7C,IAvBA,IAAIqD,GAA6B,EAE7BC,EAAU,GACVC,EAAU,SAAUpB,GACpB,IAAIqB,EAAgBlB,EAASH,GACzBW,EAAiBU,EAAcV,eAC/B7C,EAAkBC,EAAiBsD,EAAcX,IAAK7C,GAE1D,GAAIC,EAAiB,CAEjByC,OAAOe,eAAeL,EAAO,gBAAiB,CAC1CM,IAAK,WAAc,OAAOF,EAAc/B,QACxCkC,cAAc,IAElBN,GAA6B,EAC7B,IAAK,IAAIO,EAAI,EAAGA,EAAId,EAAeC,SAAWK,EAAMS,aAAcD,IAAK,CACnE,IAAIE,EAAgB7D,EAAgB6C,EAAec,GAAGG,aAAa1C,KAAKpB,EAAiBmD,GAC5D,mBAAlBU,GACPR,EAAQxB,KAAKgC,MAKpB3B,EAAI,EAAGA,EAAIG,EAASS,SAAWK,EAAMS,aAAc1B,IACxDoB,EAAQpB,GAGZmB,EAAQrB,QAAQ,SAAUrD,GACtBA,MAGAyE,UAEOD,EAAMY,cClJrB,SAASC,EAA6BC,EAAelE,GACjD,IAAIW,EAAW+B,OAAOC,KAAKuB,GACtBC,IAAI,SAAU/B,GAAiB,MAAO,SAAWpC,EAAY,UAAaoC,EAAgB,OAC1FgC,KAAK,KACV,IAAKzD,EACD,MAAO,GAIX,IAFA,IAAI0D,EAAoBC,SAASC,gBAAgBC,iBAAiB7D,GAC9D8D,EAAa,GACRtC,EAAI,EAAGA,EAAIkC,EAAkBtB,OAAQZ,IAAK,CAC/C,IAAIuC,EAAY5E,EAAsBuE,EAAkBlC,GAAInC,GACxD0E,GACAD,EAAW3C,KAAK4C,GAGxB,OAAOD,EAEX,IAAIE,EAAe,CAOfC,OAAQ,SAAUV,EAAelE,GAC7B,IAEI6E,EACAC,EAHAC,GAAY,EACZC,GAAmB,EAkCvB,SAASC,IAGDD,EACAE,sBAAsBD,IAI1BF,GAAY,EACZD,OAAuB3E,GAK3B,SAASgF,EAAgB/B,GAErB,GADA4B,GAAmB,EACdF,EAAL,CAGA,IAAIM,EAAWN,EAAqBX,IAAI,SAAU1B,GAC9C,IAAI4C,EAAO5C,EAAG4C,KACd,OACIC,MAAOD,EAAKE,YACZC,OAAQH,EAAKI,gBAGjBC,EAAiB,GACrBZ,EAAqB7C,QAAQ,SAAU6C,EAAsB3C,GACzD,IAAIwD,EAAUP,EAASjD,GAEnBwD,EAAQL,QAAUR,EAAqBQ,OACvCK,EAAQH,SAAWV,EAAqBU,QAIxCV,EAAqBJ,UAAUkB,WAGnCd,EAAqBJ,UAAUmB,aAAeF,EAC9Cb,EAAqBQ,MAAQK,EAAQL,MACrCR,EAAqBU,OAASG,EAAQH,OACtCV,EAAqBgB,UAAU7D,QAAQ,SAAUtB,GAC7C,OAAOA,EAASsB,QAAQ,SAAU8D,GAC9B,OAAOL,EAAe5D,KAAKiE,EAAQ1E,KAAKyD,EAAqBJ,UAAWtB,EAAOuC,WAI3FD,EAAezD,QAAQ,SAAU6B,GACA,mBAAlBA,GACPA,OAIZ9E,OAAOgH,iBAAiB,SAAU,SAAU5C,GACnC2B,EAGKC,IACNA,GAAmB,EACnBhG,OAAOkG,sBAAsBC,EAAgBc,KAAK7C,KAtF1D,SAA6BA,GACzB,IAAIqB,EAAaR,EAA6BC,EAAelE,GAC7D+E,GAAY,EAIZD,EAAuBL,EAAWN,IAAI,SAAUO,GAC5C,IAAIwB,EAAOxB,EAAUmB,cAAgB,CACjCP,MAAO,EACPE,OAAQ,GAERW,EAA0BjC,EAAcQ,EAAU0B,gBACtD,MAAO,CACH1B,UAAWA,EACXW,KAAMX,EAAUjE,KAChBqF,UAAWpD,OAAOC,KAAKwD,GAAyBhC,IAAI,SAAUxD,GAC1D,OAAOwF,EAAwBxF,GAAUwD,IAAI,SAAUkC,GAAiB,OAAO3B,EAAU2B,EAActC,iBAE3GuB,MAAOY,EAAKZ,MACZE,OAAQU,EAAKV,UAGrBL,EAAgB/B,GA4DZkD,CAAoBlD,GAMxBmD,aAAa1B,GACbA,EAAkB2B,WAAWvB,EAAoB,QAWzDwB,IAAK,SAAUvC,EAAelE,GAC1BhB,OAAOgH,iBAAiB,UAAW,SAAU5C,GACzC,IAAIqB,EAAaR,EAA6BC,EAAelE,GACzD0F,EAAiB,GACrBjB,EAAWxC,QAAQ,SAAUyC,GACKhC,OAAOC,KAAKuB,EAAcQ,EAAU0B,iBAAiBnE,QAAQ,SAAUtB,GAChF,KAAbA,GAAmByC,EAAMqD,MAAQ9F,GACjCuD,EAAcQ,EAAU0B,gBAAgBzF,GAAUsB,QAAQ,SAAUoE,GAChEX,EAAe5D,KAAK4C,EAAU2B,EAActC,aAAa1C,KAAKqD,EAAWtB,UAKzFsC,EAAezD,QAAQ,SAAU6B,GACA,mBAAlBA,GACPA,SAUhB4C,aAAc,SAAUxC,EAAelE,GACnCsE,SAASC,gBAAgByB,iBAAiB,YAAa,SAAUW,GAC7D,IACIC,EACAC,EAFAvE,EAAWhB,EAAY,QAAUtB,EAAY,QAASkE,EAAeyC,EAAelF,QAOxF,SAASqF,EAAgBC,IACrBH,EAAuBG,GACRC,iBAEXH,EADCA,GACkB3B,sBAAsB+B,GAGjD,SAASA,IACLJ,OAAmB1G,EACNyG,EAAqBM,EAAIP,EAAeO,GACvC,MACV/D,EAAgBb,EAAUsE,EAAsB5G,GAChDmH,KAGR,SAASA,IACL7C,SAASC,gBAAgB6C,oBAAoB,YAAaN,GAC1DxC,SAASC,gBAAgB6C,oBAAoB,UAAWC,GACpDR,GACAS,qBAAqBT,GAG7B,SAASQ,EAAcE,GACnBA,EAAiBP,iBACjBG,IA5BoB,IAApB7E,EAASS,SAGb4D,EAAeK,iBA2Bf1C,SAASC,gBAAgByB,iBAAiB,YAAac,GACvDxC,SAASC,gBAAgByB,iBAAiB,UAAWqB,OAQ7DG,cAAe,SAAUtD,EAAelE,GACpCsE,SAASC,gBAAgByB,iBAAiB,YAAa,SAAUW,GAC7D,IACIC,EACAC,EAFAvE,EAAWhB,EAAY,QAAUtB,EAAY,QAASkE,EAAeyC,EAAelF,QAOxF,SAASqF,EAAgBC,IACrBH,EAAuBG,GACRC,iBAEXH,EADCA,GACkB3B,sBAAsB+B,GAGjD,SAASA,IACLJ,OAAmB1G,EAEN,IADAyG,EAAqBM,EAAIP,EAAeO,IAEjD/D,EAAgBb,EAAUsE,EAAsB5G,GAChDmH,KAGR,SAASA,IACL7C,SAASC,gBAAgB6C,oBAAoB,YAAaN,GAC1DxC,SAASC,gBAAgB6C,oBAAoB,UAAWC,GACpDR,GACAS,qBAAqBT,GAG7B,SAASQ,EAAcE,GACnBA,EAAiBP,iBACjBG,IA5BoB,IAApB7E,EAASS,SAGb4D,EAAeK,iBA2Bf1C,SAASC,gBAAgByB,iBAAiB,YAAac,GACvDxC,SAASC,gBAAgByB,iBAAiB,UAAWqB,0BAI1D,WACHjI,EAA6B,SAAU,gBAAiB,SAAwBqI,EAAehF,EAAIiF,GAC/F,IAAIpI,EAAYmD,EAAGnD,UAAWU,EAAYyC,EAAGzC,UAAWkE,EAAgBzB,EAAGyB,cACvES,EAAarF,IACbqF,EAAarF,GAAW4E,EAAelE,GAEvC0H,GAAQ,IAGRA,EAAQD,KAGhBrI,EAA6B,SAAU,OAAQ,SAAwBqF,EAAY5F,EAAM6I,GACrFlB,WAAW,WACP/B,EAAWxC,QAAQ,SAAUyC,GACzBA,EAAUmB,aAAe,CACrBP,MAAOZ,EAAUjE,KAAK8E,YACtBC,OAAQd,EAAUjE,KAAKgF,kBAInCiC,EAAQjD"}