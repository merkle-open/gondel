{"version":3,"file":"gondel.es5.min.js","sources":["GondelPluginUtils.js","GondelEventEmitter.js","GondelComponentStarter.js","GondelComponentRegistry.js","GondelAutoStart.js","GondelDomUtils.js","GondelEventRegistry.js","GondelDecorators.js","GondelComponent.js"],"sourcesContent":["var basePluginListener = function (result, data, next) { return next(result); };\r\n// Global plugin events registry\r\nvar pluginEventRegistry = window.__gondelPluginEvents || { pluginMapping: {}, pluginEvents: {} };\r\nwindow.__gondelPluginEvents = pluginEventRegistry;\r\n/** Global Plugin Event Handler Registry */\r\nexport var pluginEvents = pluginEventRegistry.pluginEvents;\r\n// Mapping to track if plugin was already registered to prevent double registrations\r\nvar pluginMapping = pluginEventRegistry.pluginMapping;\r\nexport function fireGondelPluginEvent(eventName, initialValue, data, callback) {\r\n    var isSyncron = false;\r\n    var callbackResult;\r\n    // Execute all bound events for the given name\r\n    // if they exist\r\n    (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (processedResult) {\r\n        isSyncron = true;\r\n        callbackResult = callback ? callback(processedResult) : processedResult;\r\n    });\r\n    // Add a guard to prevent asyncron plugin listeners\r\n    // to simplify the usage of fireGondelPluginEvent\r\n    if (!isSyncron) {\r\n        throw new Error(\"Async plugin listener\");\r\n    }\r\n    return callbackResult;\r\n}\r\n/**\r\n * Fire an async event which allows gondel plugins to add features to gondel\r\n */\r\nexport function fireAsyncGondelPluginEvent(eventName, initialValue, data) {\r\n    return new Promise(function (resolve) {\r\n        (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (result) {\r\n            resolve(result);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Allow plugins to hook into the gondel event system\r\n */\r\nexport function addGondelPluginEventListener(pluginName, eventName, eventListenerCallback) {\r\n    // Prevent any event registration if this pluginHandlerName\r\n    // has already been used\r\n    var pluginHandlerNamePerEvent = eventName + \"#\" + pluginName;\r\n    if (pluginMapping[pluginHandlerNamePerEvent]) {\r\n        return;\r\n    }\r\n    // Flag plugin as registered\r\n    pluginMapping[pluginHandlerNamePerEvent] = true;\r\n    // Ensure that an entry for the given event name exists\r\n    if (!pluginEvents[eventName]) {\r\n        pluginEvents[eventName] = basePluginListener;\r\n    }\r\n    var previousEventHandler = pluginEvents[eventName];\r\n    pluginEvents[eventName] = function wrapCallback(result, data, next) {\r\n        previousEventHandler(result, data, function callNextPlugin(modifiedResult, _, firstNext) {\r\n            eventListenerCallback(modifiedResult, data, function bindData(result) {\r\n                next(result, data, firstNext);\r\n            });\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=GondelPluginUtils.js.map","import { getFirstDomNode } from \"./GondelDomUtils\";\r\n/**\r\n * Submit an event which might be caught by foreign gondel, angular or react components\r\n */\r\nexport function triggerPublicEvent(eventName, gondelComponent, target, eventData, canBubble) {\r\n    if (eventData === void 0) { eventData = {}; }\r\n    if (canBubble === void 0) { canBubble = true; }\r\n    var event = document.createEvent(\"Event\");\r\n    var eventTarget = target ? getFirstDomNode(target) : gondelComponent._ctx;\r\n    var namespace = gondelComponent._namespace;\r\n    if (eventName.substr(0, namespace.length) !== namespace) {\r\n        throw new Error(\"Invalid event name '\" +\r\n            eventName +\r\n            \"' - use '\" +\r\n            namespace +\r\n            eventName.charAt(0).toUpperCase() +\r\n            eventName.slice(1) +\r\n            \"'\");\r\n    }\r\n    event.initEvent(eventName, canBubble, true);\r\n    event.data = {\r\n        component: gondelComponent,\r\n        name: gondelComponent._componentName,\r\n        namespace: gondelComponent._namespace,\r\n        eventData: eventData,\r\n    };\r\n    return eventTarget.dispatchEvent(event);\r\n}\r\n//# sourceMappingURL=GondelEventEmitter.js.map","import { internalGondelAsyncRefAttribute, internalGondelRefAttribute } from \"./GondelDomUtils\";\r\nimport { triggerPublicEvent } from \"./GondelEventEmitter\";\r\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\nvar noop = function () { };\r\nvar Deferred = function () {\r\n    var _this = this;\r\n    this.promise = new Promise(function (resolve) {\r\n        _this.resolve = resolve;\r\n    });\r\n};\r\n/**\r\n * Start all components of the gondel component registry\r\n * for the given dom context\r\n */\r\nexport function startComponentsFromRegistry(gondelComponentRegistry, domContext, namespace) {\r\n    // Get an array of all nodes which match the namespace\r\n    var gondelDomNodeList = Array.prototype.slice.call(domContext.querySelectorAll(\"[data-\" + namespace + \"-name]\"));\r\n    if (domContext.hasAttribute(\"data-\" + namespace + \"-name\")) {\r\n        gondelDomNodeList.push(domContext);\r\n    }\r\n    // Remove already booted nodes\r\n    var pristineGondelDomNodes = gondelDomNodeList.filter(function (gondelDomNode) {\r\n        return isPristineGondelDomNode(gondelDomNode, namespace);\r\n    });\r\n    var bootingDeferred = new Deferred();\r\n    // Mark all nodes as booting\r\n    pristineGondelDomNodes.forEach(function (gondelDomNode) {\r\n        attachGondelBootingFlag(gondelDomNode, bootingDeferred.promise, namespace);\r\n    });\r\n    // Create instances\r\n    var gondelComponents = fireGondelPluginEvent(\"boot\", pristineGondelDomNodes, { namespace: namespace }, function (pristineGondelDomNodes) {\r\n        return pristineGondelDomNodes.map(function (gondelDomNode) {\r\n            return constructComponent(gondelDomNode, gondelComponentRegistry, namespace);\r\n        });\r\n    });\r\n    // Get all component names\r\n    var newComponentNames = getNewComponents(gondelComponents, gondelComponentRegistry);\r\n    newComponentNames.forEach(function (componentName) {\r\n        return gondelComponentRegistry.setActiveState(componentName, true);\r\n    });\r\n    // Start all components\r\n    var gondelComponentStartPromise = fireGondelPluginEvent(\"start\", gondelComponents, { newComponentNames: newComponentNames, namespace: namespace, gondelComponentRegistry: gondelComponentRegistry }, function (gondelComponents) {\r\n        // Wait for async started components\r\n        return Promise.all(gondelComponents.map(startConstructedComponent));\r\n    })\r\n        // Let all plugins know that the components are now all ready to use\r\n        .then(function () {\r\n        gondelComponents.forEach(function (gondelComponent) {\r\n            if (gondelComponent.sync) {\r\n                gondelComponent.sync();\r\n            }\r\n        });\r\n        return fireGondelPluginEvent(\"sync\", gondelComponents, { namespace: namespace });\r\n    });\r\n    // Resolve the booting deferred\r\n    gondelComponentStartPromise\r\n        .then(bootingDeferred.resolve, bootingDeferred.resolve)\r\n        // Rethrow errors (if any)\r\n        // otherwise the browser dev tools won't show\r\n        // important bootstrap errors\r\n        .then(function () { return gondelComponentStartPromise; });\r\n    // Return a promise of all started components\r\n    return gondelComponentStartPromise;\r\n}\r\n/**\r\n * Returns true if the given domNode is neither booting nor booted\r\n */\r\nexport function isPristineGondelDomNode(domNode, namespace) {\r\n    return !domNode.hasOwnProperty(internalGondelAsyncRefAttribute + namespace);\r\n}\r\n/**\r\n * Mark the given dom node as controlled by gondel\r\n */\r\nexport function attachGondelBootingFlag(domNode, bootingFlag, namespace) {\r\n    // The name `A` mean async\r\n    // to allow waiting for asyncronous booted components\r\n    domNode[internalGondelAsyncRefAttribute + namespace] = bootingFlag;\r\n}\r\n/**\r\n * Constructs a new component\r\n */\r\nexport function constructComponent(domNode, gondelComponentRegistry, namespace) {\r\n    var componentName = domNode.getAttribute(\"data-\" + namespace + \"-name\");\r\n    var GondelComponent = gondelComponentRegistry.getComponent(componentName);\r\n    if (GondelComponent === undefined) {\r\n        throw new Error(\"Failed to boot component - \" + componentName + \" is not registred\");\r\n    }\r\n    var componentInstance = new GondelComponent(domNode, componentName);\r\n    componentInstance._ctx = domNode;\r\n    componentInstance._namespace = namespace;\r\n    componentInstance._componentName = componentName;\r\n    // Add stop method\r\n    componentInstance.stop = stopStartedComponent.bind(null, componentInstance, componentInstance.stop || noop, namespace);\r\n    // Create a circular reference which will allow access to the componentInstance from ctx\r\n    domNode[\"_gondel_\" + namespace] = componentInstance;\r\n    return componentInstance;\r\n}\r\n/**\r\n * Start a component after it was constructed\r\n */\r\nexport function startConstructedComponent(component) {\r\n    // Skip if the start method is missing\r\n    if (!component.start) {\r\n        return;\r\n    }\r\n    var expectsNoArguments = component.start.length === 0;\r\n    // Start the component and expect a promise or a syncronous return value\r\n    // if the function expects no arguments\r\n    if (expectsNoArguments) {\r\n        return component.start();\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        return component.start(resolve, reject);\r\n    });\r\n}\r\n/**\r\n * Stops a started component\r\n */\r\nexport function stopStartedComponent(component, internalStopMethod, namespace) {\r\n    triggerPublicEvent(namespace + \"Stop\", component, component._ctx);\r\n    // Remove the component instance from the html element\r\n    delete component._ctx[internalGondelRefAttribute + namespace];\r\n    delete component._ctx[internalGondelAsyncRefAttribute + namespace];\r\n    component._stopped = true;\r\n    fireGondelPluginEvent(\"stop\", component, { namespace: namespace }, internalStopMethod.bind(component));\r\n}\r\n/**\r\n * Filters the given component list and returns the names of those components which have never been started before\r\n */\r\nfunction getNewComponents(components, registry) {\r\n    var componentNameHelper = {};\r\n    components.forEach(function (component) { return (componentNameHelper[component._componentName] = true); });\r\n    var componentNames = Object.keys(componentNameHelper);\r\n    return componentNames.filter(function (componentName) { return !registry._activeComponents[componentName]; });\r\n}\r\n//# sourceMappingURL=GondelComponentStarter.js.map","import { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\nimport { addRegistryToBootloader } from \"./GondelAutoStart\";\r\nvar GLOBAL_GONDEL_REGISTRY_NAMESPACE = \"__\\ud83d\\udea1Registries\";\r\nvar GondelComponentRegistry = /** @class */ (function () {\r\n    function GondelComponentRegistry() {\r\n        this._components = {};\r\n        this._activeComponents = {};\r\n        this._bootMode = 2 /* onDomReady */;\r\n    }\r\n    GondelComponentRegistry.prototype.registerComponent = function (name, gondelComponent) {\r\n        this._components[name] = gondelComponent;\r\n    };\r\n    GondelComponentRegistry.prototype.unregisterComponent = function (name) {\r\n        delete this._components[name];\r\n    };\r\n    GondelComponentRegistry.prototype.getComponent = function (name) {\r\n        return this._components[name];\r\n    };\r\n    /**\r\n     * Set if a component is used\r\n     */\r\n    GondelComponentRegistry.prototype.setActiveState = function (name, isActive) {\r\n        this._activeComponents[name] = isActive;\r\n    };\r\n    GondelComponentRegistry.prototype.setBootMode = function (bootMode) {\r\n        this._bootMode = bootMode;\r\n    };\r\n    return GondelComponentRegistry;\r\n}());\r\nexport { GondelComponentRegistry };\r\nvar _componentRegistries;\r\nexport function getComponentRegistry(namespace) {\r\n    if (!_componentRegistries) {\r\n        _componentRegistries = window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] || {};\r\n        window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] = _componentRegistries;\r\n    }\r\n    if (!_componentRegistries[namespace]) {\r\n        _componentRegistries[namespace] = new GondelComponentRegistry();\r\n        addRegistryToBootloader(namespace);\r\n    }\r\n    return _componentRegistries[namespace];\r\n}\r\nexport function registerComponent() {\r\n    var args = arguments;\r\n    // The componentName is always the first argument\r\n    var componentName = args[0];\r\n    // Use namespace from the second argument or fallback to the default \"g\" if it is missing\r\n    var namespace = typeof args[1] === \"string\" ? args[1] : \"g\";\r\n    // The last argument is always the component class\r\n    var component = args[args.length - 1];\r\n    var gondelComponentRegistry = getComponentRegistry(namespace);\r\n    // If this component was already registered we remove the previous one\r\n    // and notify all plugins - this is especially usefull for hot component replacement\r\n    if (gondelComponentRegistry.getComponent(componentName)) {\r\n        fireGondelPluginEvent(\"unregister\", component, { componentName: componentName, namespace: namespace });\r\n    }\r\n    // Let plugins know about the new component\r\n    fireGondelPluginEvent(\"register\", component, {\r\n        componentName: componentName,\r\n        namespace: namespace,\r\n        gondelComponentRegistry: gondelComponentRegistry,\r\n    }, function (component) {\r\n        gondelComponentRegistry.registerComponent(componentName, component);\r\n    });\r\n}\r\n//# sourceMappingURL=GondelComponentRegistry.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\r\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\r\n/**\r\n * By default Gondel will run startComponents on DOMContentLoaded\r\n * To gain more controll over the boot behaviour tihs function can be called\r\n * to disable the auto start\r\n */\r\nexport function disableAutoStart(namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    getComponentRegistry(namespace).setBootMode(1 /* manual */);\r\n}\r\n/**\r\n * Wait for document ready and boot the registry\r\n */\r\nexport function addRegistryToBootloader(namespace) {\r\n    // Use new Promise to wait for the next tick\r\n    var boot = function () {\r\n        Promise.resolve().then(function () {\r\n            var gondelComponentRegistry = getComponentRegistry(namespace);\r\n            if (gondelComponentRegistry._bootMode === 2 /* onDomReady */) {\r\n                gondelComponentRegistry.setBootMode(0 /* alreadyBooted */);\r\n                startComponentsFromRegistry(gondelComponentRegistry, document.documentElement, namespace);\r\n            }\r\n        });\r\n    };\r\n    // Boot if document is complete or once it completes\r\n    if (document.readyState == \"complete\") {\r\n        boot();\r\n    }\r\n    else {\r\n        document.addEventListener(\"DOMContentLoaded\", boot, false);\r\n    }\r\n}\r\n//# sourceMappingURL=GondelAutoStart.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\r\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\r\nexport var internalGondelRefAttribute = \"_gondel_\";\r\nexport var internalGondelAsyncRefAttribute = \"_gondelA_\";\r\n/**\r\n * Returns true if the given object is a single Element\r\n */\r\nfunction isElement(domNode) {\r\n    return domNode.nodeType !== undefined;\r\n}\r\n/**\r\n * This function normalizes takes one of the following:\r\n *  + document query result\r\n *  + dom node array\r\n *  + jquery object\r\n *  + a single dom node\r\n * and turns it into a single dom node\r\n */\r\nexport function getFirstDomNode(domNode) {\r\n    if (isElement(domNode)) {\r\n        return domNode;\r\n    }\r\n    return domNode[0];\r\n}\r\n/**\r\n * Start all nodes in the given context\r\n */\r\nexport function startComponents(domContext, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var registry = getComponentRegistry(namespace);\r\n    return startComponentsFromRegistry(registry, domContext ? getFirstDomNode(domContext) : document.documentElement, namespace);\r\n}\r\n/**\r\n * Stop all nodes in the given context\r\n */\r\nexport function stopComponents(domContext, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var components = findComponents(domContext, undefined, namespace);\r\n    if (domContext && hasMountedGondelComponent(domContext)) {\r\n        components.unshift(getComponentByDomNode(domContext));\r\n    }\r\n    components.forEach(function (component) { return component.stop(); });\r\n}\r\n/**\r\n * Checks if a component is mounted on a certain DOM node\r\n */\r\nexport function hasMountedGondelComponent(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var gondelComponent = firstNode[internalGondelRefAttribute + namespace];\r\n    if (!gondelComponent || !gondelComponent._ctx) {\r\n        // no anchor prop found or ctx missing. function is needed\r\n        // that we can type the `getComponentByDomNode` without possible\r\n        // returnal of undefined.\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Returns the gondel instance for the given HtmlELement\r\n */\r\nexport function getComponentByDomNode(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var gondelComponent = extractComponent(getFirstDomNode(domNode), namespace);\r\n    if (!gondelComponent) {\r\n        throw new Error(\"Could not find a started gondel component in namespace \\\"\" + namespace + \"\\\",\\nplease check if your component is mounted via 'hasMountedGondelComponent'\");\r\n    }\r\n    return gondelComponent;\r\n}\r\n/**\r\n * Internal helper function of getComponentByDomNode\r\n *\r\n * Returns the gondel instance from a known HtmlElement\r\n * This function is an internal helper with a possible undefined\r\n * return value.\r\n */\r\nexport function extractComponent(element, namespace) {\r\n    var gondelComponent = element[internalGondelRefAttribute + namespace];\r\n    // Stop if this dom node is not known to gondel\r\n    if (gondelComponent && gondelComponent._ctx) {\r\n        return gondelComponent;\r\n    }\r\n}\r\n/**\r\n * Returns the gondel instance for the given HtmlELement once it is booted\r\n */\r\nexport function getComponentByDomNodeAsync(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var gondelComponent = firstNode[internalGondelAsyncRefAttribute + namespace];\r\n    // Stop if this dom node is not known to gondel\r\n    if (!gondelComponent) {\r\n        return Promise.reject(undefined);\r\n    }\r\n    // or the component is already booted up return it\r\n    if (gondelComponent._ctx) {\r\n        return Promise.resolve(gondelComponent);\r\n    }\r\n    // Wait the component to boot up and return it\r\n    return gondelComponent.then(function () { return firstNode[internalGondelRefAttribute + namespace]; });\r\n}\r\n/**\r\n * Returns all components inside the given node\r\n */\r\nexport function findComponents(domNode, componentName, namespace) {\r\n    if (domNode === void 0) { domNode = document.documentElement; }\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var components = [];\r\n    var attribute = \"_gondel_\" + namespace;\r\n    var nodes = firstNode.querySelectorAll(\"[data-\" + namespace + \"-name\" + (componentName ? \"=\\\"\" + componentName + \"\\\"\" : \"\") + \"]\");\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        var node = nodes[i];\r\n        var gondelComponentInstance = node[attribute];\r\n        // Verify that the component is fully booted\r\n        if (gondelComponentInstance && gondelComponentInstance._ctx === node) {\r\n            components.push(gondelComponentInstance);\r\n        }\r\n    }\r\n    return components;\r\n}\r\n//# sourceMappingURL=GondelDomUtils.js.map","/**\r\n * The event registry provides a way to bind events ahead of time\r\n * with a very small foot print during launch to improve the time to interaction\r\n */\r\nimport { extractComponent } from \"./GondelDomUtils\";\r\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\n/**\r\n * Only real browser events are supported.\r\n * Unfortunately focus and blur do not bubble so a special mapping is needed.\r\n */\r\nvar eventNameMapping = {\r\n    focus: \"focusin\",\r\n    blur: \"focusout\",\r\n};\r\n// Polyfill for element.prototype.matches\r\nvar matchesCssSelector = function (element, selector) {\r\n    var elementPrototype = window.Element.prototype;\r\n    /* istanbul ignore next : Browser polyfill can't be tested */\r\n    var elementMatches = elementPrototype.matches ||\r\n        elementPrototype.matchesSelector ||\r\n        elementPrototype.mozMatchesSelector ||\r\n        elementPrototype.msMatchesSelector ||\r\n        elementPrototype.webkitMatchesSelector;\r\n    // Cache the function and call it\r\n    return (matchesCssSelector = function (element, selector) {\r\n        return elementMatches.call(element, selector);\r\n    })(element, selector);\r\n};\r\nfunction getParentElements(startElement) {\r\n    var nodes = [];\r\n    for (var element = startElement; element; element = element.parentElement) {\r\n        nodes.push(element);\r\n    }\r\n    return nodes;\r\n}\r\n/**\r\n * Returns an array of all handlers which would apply for the current target\r\n */\r\nexport function getHandlers(attributeName, eventHandlerRegistry, target) {\r\n    var parents = getParentElements(target);\r\n    // Find all selectors which have been registred for this event type\r\n    // and which have a gondel component in one of the parrent nodes\r\n    var selectorsOfFoundComponents = [];\r\n    parents.forEach(function (parent, i) {\r\n        var componentName = parent.getAttribute(attributeName);\r\n        var handlers = componentName && eventHandlerRegistry[componentName];\r\n        if (handlers) {\r\n            // Store the index where the component was found to know in which part\r\n            // of the dom tree the selectors could be found\r\n            selectorsOfFoundComponents.push({ index: i, handlers: handlers });\r\n        }\r\n    });\r\n    // Iterate over all possible selectors to find out if the current event\r\n    // should fire any gondel handler\r\n    var handlerQueue = [];\r\n    selectorsOfFoundComponents.forEach(function (_a) {\r\n        var index = _a.index, handlers = _a.handlers;\r\n        var selectorNames = Object.keys(handlers);\r\n        selectorNames.forEach(function (selectorName) {\r\n            // If no selector is given the handler does always match\r\n            if (!selectorName) {\r\n                return handlerQueue.push({\r\n                    index: index,\r\n                    ctx: parents[index],\r\n                    target: parents[index],\r\n                    handlerOptions: handlers[selectorName],\r\n                });\r\n            }\r\n            // Iterate backwards over the children of the component to find an element\r\n            // which matches the selector for the current handler\r\n            for (var i = index; --i >= 0;) {\r\n                if (matchesCssSelector(parents[i], selectorName)) {\r\n                    return handlerQueue.push({\r\n                        index: i,\r\n                        ctx: parents[index],\r\n                        target: parents[i],\r\n                        handlerOptions: handlers[selectorName],\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    });\r\n    // Break if we couldn't find any matching element\r\n    if (handlerQueue.length === 0) {\r\n        return [];\r\n    }\r\n    // Sort the queue so events which are further up the dom are fired first\r\n    handlerQueue.sort(function (handlerA, handlerB) {\r\n        return handlerA.index > handlerB.index ? 1 : handlerA.index === handlerB.index ? 0 : -1;\r\n    });\r\n    return handlerQueue;\r\n}\r\n/**\r\n * The handler which will catch every event at the documentElement\r\n */\r\nfunction handleEvent(namespace, attributeName, eventHandlerRegistry, event) {\r\n    var target = event.target;\r\n    var handlers = getHandlers(attributeName, eventHandlerRegistry, target);\r\n    executeHandlers(handlers, event, namespace);\r\n}\r\nvar _domEventRegistry;\r\n/**\r\n * Returns the namespace registry for the given namespace..\r\n * This function must be used only by core or plugins\r\n */\r\nexport function getEventRegistry(namespace) {\r\n    if (!_domEventRegistry) {\r\n        _domEventRegistry = window[\"__\\ud83d\\udea1DomEvents\"] || {};\r\n        window[\"__\\ud83d\\udea1DomEvents\"] = _domEventRegistry;\r\n    }\r\n    if (!_domEventRegistry[namespace]) {\r\n        _domEventRegistry[namespace] = {};\r\n    }\r\n    return _domEventRegistry[namespace];\r\n}\r\n/**\r\n * Notify components\r\n * This function must be used by core or only by plugins\r\n */\r\nexport function executeHandlers(handlers, event, namespace) {\r\n    /** Store wether the original Event was modified to provide the correct currentTarget */\r\n    var eventObjectRequiresCleanup = false;\r\n    /** Store optional callback results which are executed together to allow grouped redraws */\r\n    var results = [];\r\n    var _loop_1 = function (i) {\r\n        var handlerObject = handlers[i];\r\n        var handlerOptions = handlerObject.handlerOptions;\r\n        var gondelComponent = extractComponent(handlerObject.ctx, namespace);\r\n        // Skip if the component wasn't started or if it was stopped\r\n        if (gondelComponent) {\r\n            // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\r\n            Object.defineProperty(event, \"currentTarget\", {\r\n                get: function () { return handlerObject.target; },\r\n                configurable: true,\r\n            });\r\n            eventObjectRequiresCleanup = true;\r\n            for (var j = 0; j < handlerOptions.length && !event.cancelBubble; j++) {\r\n                var handlerResult = gondelComponent[handlerOptions[j].handlerName].call(gondelComponent, event);\r\n                if (typeof handlerResult === \"function\") {\r\n                    results.push(handlerResult);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < handlers.length && !event.cancelBubble; i++) {\r\n        _loop_1(i);\r\n    }\r\n    // Execute all callbacks to allow grouping write events\r\n    results.forEach(function (result) {\r\n        result();\r\n    });\r\n    // Cleanup the event object\r\n    if (eventObjectRequiresCleanup) {\r\n        // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\r\n        delete event.currentTarget;\r\n    }\r\n}\r\n/**\r\n * Add a event lister to the <html> element\r\n * The listener will always call handleEvent with the domEventRegistry for the given event\r\n */\r\nfunction startListeningForEvent(eventName, namespace) {\r\n    document.documentElement.addEventListener(eventNameMapping[eventName] || eventName, handleEvent.bind(null, namespace, \"data-\" + namespace + \"-name\", getEventRegistry(namespace)[eventName]));\r\n}\r\n/**\r\n * Add an event to the Gondel EventRegistry\r\n */\r\nexport function addRootEventListener(namespace, domEventName, gondelComponentName, handlerName, handlerOption) {\r\n    // Create namespace if neededi\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    // Notify all plugins to allow taking over the event handling for a specific event name\r\n    // This notification is only triggered if a event name e.g. 'click' is used for the first time\r\n    if (!namespacedDomEventRegistry[domEventName]) {\r\n        namespacedDomEventRegistry[domEventName] = {};\r\n        fireGondelPluginEvent(\"registerEvent\", true, {\r\n            eventName: domEventName,\r\n            namespace: namespace,\r\n            eventRegistry: namespacedDomEventRegistry[domEventName],\r\n        }, function (isNativeEvent) {\r\n            // If no plugin registered the event\r\n            // register a native browser event\r\n            if (isNativeEvent) {\r\n                startListeningForEvent(domEventName, namespace);\r\n            }\r\n        });\r\n    }\r\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName] = {};\r\n    }\r\n    var handlerOptionObject = typeof handlerOption === \"object\" ? handlerOption : { selector: handlerOption };\r\n    var selectorKey = handlerOptionObject.selector || \"\";\r\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = [];\r\n    }\r\n    namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].push(Object.assign({ handlerName: handlerName, handlerOption: handlerOption }));\r\n}\r\n/**\r\n * Remove an event from the Gondel EventRegistry\r\n */\r\nexport function removeRootEventListener(namespace, domEventName, gondelComponentName, handlerName, selector) {\r\n    var selectorKey = selector || \"\";\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    if (namespacedDomEventRegistry[domEventName] &&\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName] &&\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].filter(function (handlerOption) {\r\n            return handlerOption.handlerName !== handlerName || handlerName === undefined;\r\n        });\r\n    }\r\n}\r\n/**\r\n * Remove all events for a given Component (e.g. a Button) from the Gondel EventRegistry\r\n */\r\nexport function removeRootEventListernerForComponent(namespace, gondelComponentName) {\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    for (var eventName in namespacedDomEventRegistry) {\r\n        /* istanbul ignore else: for in savety check */\r\n        if (namespacedDomEventRegistry.hasOwnProperty(eventName)) {\r\n            delete namespacedDomEventRegistry[eventName][gondelComponentName];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=GondelEventRegistry.js.map","import { addRootEventListener, removeRootEventListernerForComponent } from \"./GondelEventRegistry\";\r\n// Because of how decorators work @EventListeners is executed before the class is registred\r\n// so we need to provide a hrm compatible approch initialize and reinitialize the events\r\nimport { addGondelPluginEventListener } from \"./GondelPluginUtils\";\r\nimport { registerComponent } from \"./index\";\r\nexport function Component(componentName, namespace) {\r\n    return function (constructor) {\r\n        registerComponent(componentName, namespace, constructor);\r\n    };\r\n}\r\nfunction hookEventDecoratorInCore() {\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"register\", function (component, _a, next) {\r\n        var componentName = _a.componentName, namespace = _a.namespace, gondelComponentRegistry = _a.gondelComponentRegistry;\r\n        // Only apply in case the component is already active in the DOM\r\n        // this will only happen during hot module replacement\r\n        if (!gondelComponentRegistry._activeComponents[componentName]) {\r\n            return next(component);\r\n        }\r\n        // The decorator will store the event information in two different places.\r\n        // For ES6 classes it is using __events\r\n        // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\r\n        var componentEventOptions = (component.prototype && component.prototype.__events) || component.__events;\r\n        if (componentEventOptions) {\r\n            componentEventOptions.forEach(function (eventOptions) {\r\n                addRootEventListener(namespace, \r\n                /* event name: */ eventOptions[0], componentName, \r\n                /* handler: */ eventOptions[1], \r\n                /* selector: */ eventOptions[2]);\r\n            });\r\n        }\r\n        next(component);\r\n    });\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"unregister\", function (component, _a, next) {\r\n        var componentName = _a.componentName, namespace = _a.namespace;\r\n        removeRootEventListernerForComponent(namespace, componentName);\r\n        next(component);\r\n    });\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"start\", function (gondelComponents, _a, next) {\r\n        var newComponentNames = _a.newComponentNames, gondelComponentRegistry = _a.gondelComponentRegistry, namespace = _a.namespace;\r\n        newComponentNames.forEach(function (componentName) {\r\n            var gondelComponent = gondelComponentRegistry.getComponent(componentName);\r\n            // The decorator will store the event information in two different places.\r\n            // For ES6 classes it is using __events\r\n            // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\r\n            var componentEventOptions = (gondelComponent.prototype && gondelComponent.prototype.__events) ||\r\n                gondelComponent.__events;\r\n            if (componentEventOptions) {\r\n                componentEventOptions.forEach(function (eventOptions) {\r\n                    addRootEventListener(namespace, \r\n                    /* event name: */ eventOptions[0], componentName, \r\n                    /* handler: */ eventOptions[1], \r\n                    /* selector: */ eventOptions[2]);\r\n                });\r\n            }\r\n        });\r\n        next(gondelComponents);\r\n    });\r\n}\r\n/**\r\n * The @EventListener decorator will add all event names to a static variable\r\n */\r\nexport function EventListener(eventName, selector) {\r\n    return function (target, handler) {\r\n        hookEventDecoratorInCore();\r\n        if (handler.substr(0, 1) !== \"_\") {\r\n            throw new Error(\"Invalid handler name '\" + handler + \"' use '_\" + handler + \"' instead.\");\r\n        }\r\n        if (!target.__events) {\r\n            target.__events = [];\r\n        }\r\n        target.__events.push([eventName, handler, selector]);\r\n    };\r\n}\r\n//# sourceMappingURL=GondelDecorators.js.map","var GondelBaseComponent = /** @class */ (function () {\r\n    function GondelBaseComponent(domNode, componentName) {\r\n    }\r\n    /**\r\n     * Stop method\r\n     */\r\n    GondelBaseComponent.prototype.stop = function () { };\r\n    return GondelBaseComponent;\r\n}());\r\nexport { GondelBaseComponent };\r\n//# sourceMappingURL=GondelComponent.js.map"],"names":["basePluginListener","result","data","next","pluginEventRegistry","window","__gondelPluginEvents","pluginMapping","pluginEvents","fireGondelPluginEvent","eventName","initialValue","callback","callbackResult","isSyncron","processedResult","Error","addGondelPluginEventListener","pluginName","eventListenerCallback","previousEventHandler","pluginHandlerNamePerEvent","modifiedResult","_","firstNext","triggerPublicEvent","gondelComponent","target","eventData","canBubble","event","document","createEvent","eventTarget","getFirstDomNode","_ctx","namespace","_namespace","substr","length","charAt","toUpperCase","slice","initEvent","component","name","_componentName","dispatchEvent","noop","Deferred","_this","this","promise","Promise","resolve","startComponentsFromRegistry","gondelComponentRegistry","domContext","gondelDomNodeList","Array","prototype","call","querySelectorAll","hasAttribute","push","pristineGondelDomNodes","filter","gondelDomNode","hasOwnProperty","internalGondelAsyncRefAttribute","bootingDeferred","forEach","domNode","bootingFlag","registry","componentNameHelper","gondelComponents","map","componentName","getAttribute","GondelComponent","getComponent","undefined","componentInstance","stop","internalStopMethod","internalGondelRefAttribute","_stopped","bind","constructComponent","newComponentNames","Object","keys","_activeComponents","setActiveState","gondelComponentStartPromise","all","startConstructedComponent","then","sync","start","reject","_componentRegistries","GLOBAL_GONDEL_REGISTRY_NAMESPACE","GondelComponentRegistry","registerComponent","_components","unregisterComponent","isActive","setBootMode","bootMode","_bootMode","getComponentRegistry","boot","documentElement","readyState","addEventListener","args","arguments","nodeType","hasMountedGondelComponent","getComponentByDomNode","extractComponent","element","findComponents","components","attribute","nodes","i","node","gondelComponentInstance","_domEventRegistry","eventNameMapping","focus","blur","matchesCssSelector","selector","elementPrototype","Element","elementMatches","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","webkitMatchesSelector","getHandlers","attributeName","eventHandlerRegistry","parents","startElement","parentElement","getParentElements","selectorsOfFoundComponents","parent","handlers","index","handlerQueue","_a","selectorName","ctx","handlerOptions","sort","handlerA","handlerB","handleEvent","eventObjectRequiresCleanup","results","cancelBubble","handlerObject","defineProperty","get","configurable","j","handlerResult","handlerName","_loop_1","currentTarget","executeHandlers","getEventRegistry","addRootEventListener","domEventName","gondelComponentName","handlerOption","namespacedDomEventRegistry","eventRegistry","isNativeEvent","selectorKey","assign","hookEventDecoratorInCore","componentEventOptions","__events","eventOptions","removeRootEventListernerForComponent","GondelBaseComponent","constructor","handler","firstNode","unshift"],"mappings":"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"}