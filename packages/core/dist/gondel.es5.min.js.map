{"version":3,"file":"gondel.es5.min.js","sources":["GondelPluginUtils.js","GondelEventEmitter.js","GondelComponentStarter.js","GondelComponentRegistry.js","GondelAutoStart.js","GondelDomUtils.js","GondelEventRegistry.js","GondelDecorators.js","GondelComponent.js"],"sourcesContent":["var basePluginListener = function (result, data, next) { return next(result); };\n// Global plugin events registry\nexport var pluginEvents = window.__gondelPluginEvents || {};\nwindow.__gondelPluginEvents = pluginEvents;\nexport function fireGondelPluginEvent(eventName, initialValue, data, callback) {\n    var isSyncron = false;\n    var callbackResult;\n    // Execute all bound events for the given name\n    // if they exist\n    (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (processedResult) {\n        isSyncron = true;\n        callbackResult = callback ? callback(processedResult) : processedResult;\n    });\n    // Add a guard to prevent asyncron plugin listeners\n    // to simplify the usage of fireGondelPluginEvent\n    if (!isSyncron) {\n        throw new Error(\"Async plugin listener\");\n    }\n    return callbackResult;\n}\n/**\n * Fire an async event which allows gondel plugins to add features to gondel\n */\nexport function fireAsyncGondelPluginEvent(eventName, initialValue, data) {\n    return new Promise(function (resolve) {\n        (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (result) {\n            resolve(result);\n        });\n    });\n}\n/**\n * Allow plugins to hook into the gondel event system\n */\nexport function addGondelPluginEventListener(eventName, eventListenerCallback) {\n    if (!pluginEvents[eventName]) {\n        pluginEvents[eventName] = basePluginListener;\n    }\n    var previousEventHandler = pluginEvents[eventName];\n    pluginEvents[eventName] = function wrapCallback(result, data, next) {\n        previousEventHandler(result, data, function callNextPlugin(modifiedResult, _, firstNext) {\n            eventListenerCallback(modifiedResult, data, function bindData(result) {\n                next(result, data, firstNext);\n            });\n        });\n    };\n}\n//# sourceMappingURL=GondelPluginUtils.js.map","import { getFirstDomNode } from \"./GondelDomUtils\";\n/**\n * Submit an event which might be caught by foreign gondel, angular or react components\n */\nexport function triggerPublicEvent(eventName, gondelComponent, target, eventData, canBubble) {\n    if (eventData === void 0) { eventData = {}; }\n    if (canBubble === void 0) { canBubble = true; }\n    var event = document.createEvent(\"Event\");\n    var eventTarget = target ? getFirstDomNode(target) : gondelComponent._ctx;\n    if (eventName[0] !== gondelComponent._namespace) {\n        throw new Error(\"Invalid event name '\" +\n            eventName +\n            \"' - use '\" +\n            gondelComponent._namespace +\n            eventName.charAt(0).toUpperCase() +\n            eventName.slice(1) +\n            \"'\");\n    }\n    event.initEvent(eventName, canBubble, true);\n    event.data = {\n        component: gondelComponent,\n        name: gondelComponent._componentName,\n        namespace: gondelComponent._namespace,\n        eventData: eventData\n    };\n    return eventTarget.dispatchEvent(event);\n}\n//# sourceMappingURL=GondelEventEmitter.js.map","import { internalGondelAsyncRefAttribute, internalGondelRefAttribute } from \"./GondelDomUtils\";\nimport { triggerPublicEvent } from \"./GondelEventEmitter\";\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\nvar noop = function () { };\nvar Deferred = function () {\n    var _this = this;\n    this.promise = new Promise(function (resolve) {\n        _this.resolve = resolve;\n    });\n};\n/**\n * Start all components of the gondel component registry\n * for the given dom context\n */\nexport function startComponentsFromRegistry(gondelComponentRegistry, domContext, namespace) {\n    // Get an array of all nodes which match the namespace\n    var gondelDomNodeList = Array.prototype.slice.call(domContext.querySelectorAll(\"[data-\" + namespace + \"-name]\"));\n    if (domContext.hasAttribute(\"data-\" + namespace + \"-name\")) {\n        gondelDomNodeList.push(domContext);\n    }\n    // Remove already booted nodes\n    var pristineGondelDomNodes = gondelDomNodeList.filter(function (gondelDomNode) {\n        return isPristineGondelDomNode(gondelDomNode, namespace);\n    });\n    var bootingDeferred = new Deferred();\n    // Mark all nodes as booting\n    pristineGondelDomNodes.forEach(function (gondelDomNode) {\n        attachGondelBootingFlag(gondelDomNode, bootingDeferred.promise, namespace);\n    });\n    // Create instances\n    var gondelComponents = fireGondelPluginEvent(\"boot\", pristineGondelDomNodes, { namespace: namespace }, function (pristineGondelDomNodes) {\n        return pristineGondelDomNodes.map(function (gondelDomNode) {\n            return constructComponent(gondelDomNode, gondelComponentRegistry, namespace);\n        });\n    });\n    // Get all component names\n    var newComponentNames = getNewComponents(gondelComponents, gondelComponentRegistry);\n    newComponentNames.forEach(function (componentName) {\n        return gondelComponentRegistry.setActiveState(componentName, true);\n    });\n    // Start all components\n    var gondelComponentStartPromise = fireGondelPluginEvent(\"start\", gondelComponents, { newComponentNames: newComponentNames, namespace: namespace, gondelComponentRegistry: gondelComponentRegistry }, function (gondelComponents) {\n        // Wait for async started components\n        return Promise.all(gondelComponents.map(startConstructedComponent));\n    })\n        // Let all plugins know that the components are now all ready to use\n        .then(function () {\n        gondelComponents.forEach(function (gondelComponent) {\n            if (gondelComponent.sync) {\n                gondelComponent.sync();\n            }\n        });\n        return fireGondelPluginEvent(\"sync\", gondelComponents, { namespace: namespace });\n    });\n    // Resolve the booting deferred\n    gondelComponentStartPromise\n        .then(bootingDeferred.resolve, bootingDeferred.resolve)\n        // Rethrow errors (if any)\n        // otherwise the browser dev tools won't show\n        // important bootstrap errors\n        .then(function () { return gondelComponentStartPromise; });\n    // Return a promise of all started components\n    return gondelComponentStartPromise;\n}\n/**\n * Returns true if the given domNode is neither booting nor booted\n */\nexport function isPristineGondelDomNode(domNode, namespace) {\n    return !domNode.hasOwnProperty(internalGondelAsyncRefAttribute + namespace);\n}\n/**\n * Mark the given dom node as controlled by gondel\n */\nexport function attachGondelBootingFlag(domNode, bootingFlag, namespace) {\n    // The name `A` mean async\n    // to allow waiting for asyncronous booted components\n    domNode[internalGondelAsyncRefAttribute + namespace] = bootingFlag;\n}\n/**\n * Constructs a new component\n */\nexport function constructComponent(domNode, gondelComponentRegistry, namespace) {\n    var componentName = domNode.getAttribute(\"data-\" + namespace + \"-name\");\n    var GondelComponent = gondelComponentRegistry.getComponent(componentName);\n    if (GondelComponent === undefined) {\n        throw new Error(\"Failed to boot component - \" + componentName + \" is not registred\");\n    }\n    var componentInstance = new GondelComponent(domNode, componentName);\n    componentInstance._ctx = domNode;\n    componentInstance._namespace = namespace;\n    componentInstance._componentName = componentName;\n    // Add stop method\n    componentInstance.stop = stopStartedComponent.bind(null, componentInstance, componentInstance.stop || noop, namespace);\n    // Create a circular reference which will allow access to the componentInstance from ctx\n    domNode[\"_gondel_\" + namespace] = componentInstance;\n    return componentInstance;\n}\n/**\n * Start a component after it was constructed\n */\nexport function startConstructedComponent(component) {\n    // Skip if the start method is missing\n    if (!component.start) {\n        return;\n    }\n    var expectsNoArguments = component.start.length === 0;\n    // Start the component and expect a promise or a syncronous return value\n    // if the function expects no arguments\n    if (expectsNoArguments) {\n        return component.start();\n    }\n    return new Promise(function (resolve, reject) { return component.start(resolve, reject); });\n}\n/**\n * Stops a started component\n */\nexport function stopStartedComponent(component, internalStopMethod, namespace) {\n    triggerPublicEvent(namespace + \"Stop\", component, component._ctx);\n    // Remove the component instance from the html element\n    delete component._ctx[internalGondelRefAttribute + namespace];\n    delete component._ctx[internalGondelAsyncRefAttribute + namespace];\n    component._stopped = true;\n    fireGondelPluginEvent(\"stop\", component, { namespace: namespace }, internalStopMethod.bind(component));\n}\n/**\n * Filters the given component list and returns the names of those components which have never been started before\n */\nfunction getNewComponents(components, registry) {\n    var componentNameHelper = {};\n    components.forEach(function (component) { return (componentNameHelper[component._componentName] = true); });\n    var componentNames = Object.keys(componentNameHelper);\n    return componentNames.filter(function (componentName) { return !registry._activeComponents[componentName]; });\n}\n//# sourceMappingURL=GondelComponentStarter.js.map","import { fireGondelPluginEvent } from \"./GondelPluginUtils\";\nimport { addRegistryToBootloader } from \"./GondelAutoStart\";\nvar GLOBAL_GONDEL_REGISTRY_NAMESPACE = \"__\\ud83d\\udea1Registries\";\nvar GondelComponentRegistry = /** @class */ (function () {\n    function GondelComponentRegistry() {\n        this._components = {};\n        this._activeComponents = {};\n        this._bootMode = 2 /* onDomReady */;\n    }\n    GondelComponentRegistry.prototype.registerComponent = function (name, gondelComponent) {\n        this._components[name] = gondelComponent;\n    };\n    GondelComponentRegistry.prototype.unregisterComponent = function (name) {\n        delete this._components[name];\n    };\n    GondelComponentRegistry.prototype.getComponent = function (name) {\n        return this._components[name];\n    };\n    /**\n     * Set if a component is used\n     */\n    GondelComponentRegistry.prototype.setActiveState = function (name, isActive) {\n        this._activeComponents[name] = isActive;\n    };\n    GondelComponentRegistry.prototype.setBootMode = function (bootMode) {\n        this._bootMode = bootMode;\n    };\n    return GondelComponentRegistry;\n}());\nexport { GondelComponentRegistry };\nvar _componentRegistries;\nexport function getComponentRegistry(namespace) {\n    if (!_componentRegistries) {\n        _componentRegistries = window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] || {};\n        window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] = _componentRegistries;\n    }\n    if (!_componentRegistries[namespace]) {\n        _componentRegistries[namespace] = new GondelComponentRegistry();\n        addRegistryToBootloader(namespace);\n    }\n    return _componentRegistries[namespace];\n}\nexport function registerComponent() {\n    var args = arguments;\n    // The componentName is always the first argument\n    var componentName = args[0];\n    // Use namespace from the second argument or fallback to the default \"g\" if it is missing\n    var namespace = typeof args[1] === \"string\" ? args[1] : \"g\";\n    // The last argument is always the component class\n    var component = args[args.length - 1];\n    var gondelComponentRegistry = getComponentRegistry(namespace);\n    // If this component was already registered we remove the previous one\n    // and notify all plugins - this is especially usefull for hot component replacement\n    if (gondelComponentRegistry.getComponent(componentName)) {\n        fireGondelPluginEvent(\"unregister\", component, { componentName: componentName, namespace: namespace });\n    }\n    // Let plugins know about the new component\n    fireGondelPluginEvent(\"register\", component, {\n        componentName: componentName,\n        namespace: namespace,\n        gondelComponentRegistry: gondelComponentRegistry\n    }, function (component) {\n        gondelComponentRegistry.registerComponent(componentName, component);\n    });\n}\n//# sourceMappingURL=GondelComponentRegistry.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\n/**\n * By default Gondel will run startComponents on DOMContentLoaded\n * To gain more controll over the boot behaviour tihs function can be called\n * to disable the auto start\n */\nexport function disableAutoStart(namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    getComponentRegistry(namespace).setBootMode(1 /* manual */);\n}\n/**\n * Wait for document ready and boot the registry\n */\nexport function addRegistryToBootloader(namespace) {\n    // Use new Promise to wait for the next tick\n    var boot = function () {\n        Promise.resolve().then(function () {\n            var gondelComponentRegistry = getComponentRegistry(namespace);\n            if (gondelComponentRegistry._bootMode === 2 /* onDomReady */) {\n                gondelComponentRegistry.setBootMode(0 /* alreadyBooted */);\n                startComponentsFromRegistry(gondelComponentRegistry, document.documentElement, namespace);\n            }\n        });\n    };\n    // Boot if document is complete or once it completes\n    if (document.readyState == \"complete\") {\n        boot();\n    }\n    else {\n        document.addEventListener(\"DOMContentLoaded\", boot, false);\n    }\n}\n//# sourceMappingURL=GondelAutoStart.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\nexport var internalGondelRefAttribute = \"_gondel_\";\nexport var internalGondelAsyncRefAttribute = \"_gondelA_\";\n/**\n * Returns true if the given object is a single Element\n */\nfunction isElement(domNode) {\n    return domNode.nodeType !== undefined;\n}\n/**\n * This function normalizes takes one of the following:\n *  + document query result\n *  + dom node array\n *  + jquery object\n *  + a single dom node\n * and turns it into a single dom node\n */\nexport function getFirstDomNode(domNode) {\n    if (isElement(domNode)) {\n        return domNode;\n    }\n    return domNode[0];\n}\n/**\n * Start all nodes in the given context\n */\nexport function startComponents(domContext, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var registry = getComponentRegistry(namespace);\n    return startComponentsFromRegistry(registry, domContext ? getFirstDomNode(domContext) : document.documentElement, namespace);\n}\n/**\n * Stop all nodes in the given context\n */\nexport function stopComponents(domContext, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var components = findComponents(domContext, undefined, namespace);\n    if (domContext && hasMountedGondelComponent(domContext)) {\n        components.unshift(getComponentByDomNode(domContext));\n    }\n    components.forEach(function (component) { return component.stop(); });\n}\n/**\n * Checks if a component is mounted on a certain DOM node\n */\nexport function hasMountedGondelComponent(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var gondelComponent = firstNode[internalGondelRefAttribute + namespace];\n    if (!gondelComponent || !gondelComponent._ctx) {\n        // no anchor prop found or ctx missing. function is needed\n        // that we can type the `getComponentByDomNode` without possible\n        // returnal of undefined.\n        return false;\n    }\n    return true;\n}\n/**\n * Returns the gondel instance for the given HtmlELement\n */\nexport function getComponentByDomNode(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var gondelComponent = extractComponent(getFirstDomNode(domNode), namespace);\n    if (!gondelComponent) {\n        throw new Error(\"Could not find a started gondel component in namespace \\\"\" + namespace + \"\\\",\\nplease check if your component is mounted via 'hasMountedGondelComponent'\");\n    }\n    return gondelComponent;\n}\n/**\n * Internal helper function of getComponentByDomNode\n *\n * Returns the gondel instance from a known HtmlElement\n * This function is an internal helper with a possible undefined\n * return value.\n */\nexport function extractComponent(element, namespace) {\n    var gondelComponent = element[internalGondelRefAttribute + namespace];\n    // Stop if this dom node is not known to gondel\n    if (gondelComponent && gondelComponent._ctx) {\n        return gondelComponent;\n    }\n}\n/**\n * Returns the gondel instance for the given HtmlELement once it is booted\n */\nexport function getComponentByDomNodeAsync(domNode, namespace) {\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var gondelComponent = firstNode[internalGondelAsyncRefAttribute + namespace];\n    // Stop if this dom node is not known to gondel\n    if (!gondelComponent) {\n        return Promise.reject(undefined);\n    }\n    // or the component is already booted up return it\n    if (gondelComponent._ctx) {\n        return Promise.resolve(gondelComponent);\n    }\n    // Wait the component to boot up and return it\n    return gondelComponent.then(function () { return firstNode[internalGondelRefAttribute + namespace]; });\n}\n/**\n * Returns all components inside the given node\n */\nexport function findComponents(domNode, componentName, namespace) {\n    if (domNode === void 0) { domNode = document.documentElement; }\n    if (namespace === void 0) { namespace = \"g\"; }\n    var firstNode = getFirstDomNode(domNode);\n    var components = [];\n    var attribute = \"_gondel_\" + namespace;\n    var nodes = firstNode.querySelectorAll(\"[data-\" + namespace + \"-name\" + (componentName ? \"=\\\"\" + componentName + \"\\\"\" : \"\") + \"]\");\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        var gondelComponentInstance = node[attribute];\n        // Verify that the component is fully booted\n        if (gondelComponentInstance && gondelComponentInstance._ctx === node) {\n            components.push(gondelComponentInstance);\n        }\n    }\n    return components;\n}\n//# sourceMappingURL=GondelDomUtils.js.map","/**\n * The event registry provides a way to bind events ahead of time\n * with a very small foot print during launch to improve the time to interaction\n */\nimport { extractComponent } from \"./GondelDomUtils\";\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\n/**\n * Only real browser events are supported.\n * Unfortunately focus and blur do not bubble so a special mapping is needed.\n */\nvar eventNameMapping = {\n    focus: \"focusin\",\n    blur: \"focusout\"\n};\n// Polyfill for element.prototype.matches\nvar matchesCssSelector = function (element, selector) {\n    var elementPrototype = window.Element.prototype;\n    /* istanbul ignore next : Browser polyfill can't be tested */\n    var elementMatches = elementPrototype.matches ||\n        elementPrototype.matchesSelector ||\n        elementPrototype.mozMatchesSelector ||\n        elementPrototype.msMatchesSelector ||\n        elementPrototype.webkitMatchesSelector;\n    // Cache the function and call it\n    return (matchesCssSelector = function (element, selector) {\n        return elementMatches.call(element, selector);\n    })(element, selector);\n};\nfunction getParentElements(startElement) {\n    var nodes = [];\n    for (var element = startElement; element; element = element.parentElement) {\n        nodes.push(element);\n    }\n    return nodes;\n}\n/**\n * Returns an array of all handlers which would apply for the current target\n */\nexport function getHandlers(attributeName, eventHandlerRegistry, target) {\n    var parents = getParentElements(target);\n    // Find all selectors which have been registred for this event type\n    // and which have a gondel component in one of the parrent nodes\n    var selectorsOfFoundComponents = [];\n    parents.forEach(function (parent, i) {\n        var componentName = parent.getAttribute(attributeName);\n        var handlers = componentName && eventHandlerRegistry[componentName];\n        if (handlers) {\n            // Store the index where the component was found to know in which part\n            // of the dom tree the selectors could be found\n            selectorsOfFoundComponents.push({ index: i, handlers: handlers });\n        }\n    });\n    // Iterate over all possible selectors to find out if the current event\n    // should fire any gondel handler\n    var handlerQueue = [];\n    selectorsOfFoundComponents.forEach(function (_a) {\n        var index = _a.index, handlers = _a.handlers;\n        var selectorNames = Object.keys(handlers);\n        selectorNames.forEach(function (selectorName) {\n            // If no selector is given the handler does always match\n            if (!selectorName) {\n                return handlerQueue.push({\n                    index: index,\n                    ctx: parents[index],\n                    target: parents[index],\n                    handlerOptions: handlers[selectorName]\n                });\n            }\n            // Iterate backwards over the children of the component to find an element\n            // which matches the selector for the current handler\n            for (var i = index; --i >= 0;) {\n                if (matchesCssSelector(parents[i], selectorName)) {\n                    return handlerQueue.push({\n                        index: i,\n                        ctx: parents[index],\n                        target: parents[i],\n                        handlerOptions: handlers[selectorName]\n                    });\n                }\n            }\n        });\n    });\n    // Break if we couldn't find any matching element\n    if (handlerQueue.length === 0) {\n        return [];\n    }\n    // Sort the queue so events which are further up the dom are fired first\n    handlerQueue.sort(function (handlerA, handlerB) {\n        return handlerA.index > handlerB.index ? 1 : handlerA.index === handlerB.index ? 0 : -1;\n    });\n    return handlerQueue;\n}\n/**\n * The handler which will catch every event at the documentElement\n */\nfunction handleEvent(namespace, attributeName, eventHandlerRegistry, event) {\n    var target = event.target;\n    var handlers = getHandlers(attributeName, eventHandlerRegistry, target);\n    executeHandlers(handlers, event, namespace);\n}\nvar _domEventRegistry;\n/**\n * Returns the namespace registry for the given namespace..\n * This function must be used only by core or plugins\n */\nexport function getEventRegistry(namespace) {\n    if (!_domEventRegistry) {\n        _domEventRegistry = window[\"__\\ud83d\\udea1DomEvents\"] || {};\n        window[\"__\\ud83d\\udea1DomEvents\"] = _domEventRegistry;\n    }\n    if (!_domEventRegistry[namespace]) {\n        _domEventRegistry[namespace] = {};\n    }\n    return _domEventRegistry[namespace];\n}\n/**\n * Notify components\n * This function must be used by core or only by plugins\n */\nexport function executeHandlers(handlers, event, namespace) {\n    /** Store wether the original Event was modified to provide the correct currentTarget */\n    var eventObjectRequiresCleanup = false;\n    /** Store optional callback results which are executed together to allow grouped redraws */\n    var results = [];\n    var _loop_1 = function (i) {\n        var handlerObject = handlers[i];\n        var handlerOptions = handlerObject.handlerOptions;\n        var gondelComponent = extractComponent(handlerObject.ctx, namespace);\n        // Skip if the component wasn't started or if it was stopped\n        if (gondelComponent) {\n            // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\n            Object.defineProperty(event, \"currentTarget\", {\n                get: function () { return handlerObject.target; },\n                configurable: true\n            });\n            eventObjectRequiresCleanup = true;\n            for (var j = 0; j < handlerOptions.length && !event.cancelBubble; j++) {\n                var handlerResult = gondelComponent[handlerOptions[j].handlerName].call(gondelComponent, event);\n                if (typeof handlerResult === \"function\") {\n                    results.push(handlerResult);\n                }\n            }\n        }\n    };\n    for (var i = 0; i < handlers.length && !event.cancelBubble; i++) {\n        _loop_1(i);\n    }\n    // Execute all callbacks to allow grouping write events\n    results.forEach(function (result) {\n        result();\n    });\n    // Cleanup the event object\n    if (eventObjectRequiresCleanup) {\n        // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\n        delete event.currentTarget;\n    }\n}\n/**\n * Add a event lister to the <html> element\n * The listener will always call handleEvent with the domEventRegistry for the given event\n */\nfunction startListeningForEvent(eventName, namespace) {\n    document.documentElement.addEventListener(eventNameMapping[eventName] || eventName, handleEvent.bind(null, namespace, \"data-\" + namespace + \"-name\", getEventRegistry(namespace)[eventName]));\n}\n/**\n * Add an event to the Gondel EventRegistry\n */\nexport function addRootEventListener(namespace, domEventName, gondelComponentName, handlerName, handlerOption) {\n    // Create namespace if neededi\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    // Notify all plugins to allow taking over the event handling for a specific event name\n    // This notification is only triggered if a event name e.g. 'click' is used for the first time\n    if (!namespacedDomEventRegistry[domEventName]) {\n        namespacedDomEventRegistry[domEventName] = {};\n        fireGondelPluginEvent(\"registerEvent\", true, {\n            eventName: domEventName,\n            namespace: namespace,\n            eventRegistry: namespacedDomEventRegistry[domEventName]\n        }, function (isNativeEvent) {\n            // If no plugin registered the event\n            // register a native browser event\n            if (isNativeEvent) {\n                startListeningForEvent(domEventName, namespace);\n            }\n        });\n    }\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName] = {};\n    }\n    var handlerOptionObject = typeof handlerOption === \"object\" ? handlerOption : { selector: handlerOption };\n    var selectorKey = handlerOptionObject.selector || \"\";\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = [];\n    }\n    namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].push(Object.assign({ handlerName: handlerName, handlerOption: handlerOption }));\n}\n/**\n * Remove an event from the Gondel EventRegistry\n */\nexport function removeRootEventListener(namespace, domEventName, gondelComponentName, handlerName, selector) {\n    var selectorKey = selector || \"\";\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    if (namespacedDomEventRegistry[domEventName] &&\n        namespacedDomEventRegistry[domEventName][gondelComponentName] &&\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].filter(function (handlerOption) {\n            return handlerOption.handlerName !== handlerName || handlerName === undefined;\n        });\n    }\n}\n/**\n * Remove all events for a given Component (e.g. a Button) from the Gondel EventRegistry\n */\nexport function removeRootEventListernerForComponent(namespace, gondelComponentName) {\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\n    for (var eventName in namespacedDomEventRegistry) {\n        /* istanbul ignore else: for in savety check */\n        if (namespacedDomEventRegistry.hasOwnProperty(eventName)) {\n            delete namespacedDomEventRegistry[eventName][gondelComponentName];\n        }\n    }\n}\n//# sourceMappingURL=GondelEventRegistry.js.map","import { addRootEventListener, removeRootEventListernerForComponent } from \"./GondelEventRegistry\";\n// Because of how decorators work @EventListeners is executed before the class is registred\n// so we need to provide a hrm compatible approch initialize and reinitialize the events\nimport { addGondelPluginEventListener } from \"./GondelPluginUtils\";\nimport { registerComponent } from \"./index\";\nexport function Component(componentName, namespace) {\n    return function (constructor) {\n        registerComponent(componentName, namespace, constructor);\n    };\n}\nvar areEventsHookedIntoCore = false;\nfunction hookEventDecoratorInCore() {\n    areEventsHookedIntoCore = true;\n    addGondelPluginEventListener(\"register\", function (component, _a, next) {\n        var componentName = _a.componentName, namespace = _a.namespace, gondelComponentRegistry = _a.gondelComponentRegistry;\n        // Only apply in case the component is already active in the DOM\n        // this will only happen during hot module replacement\n        if (!gondelComponentRegistry._activeComponents[componentName]) {\n            return next(component);\n        }\n        // The decorator will store the event information in two different places.\n        // For ES6 classes it is using __events\n        // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\n        var componentEventOptions = (component.prototype && component.prototype.__events) || component.__events;\n        if (componentEventOptions) {\n            componentEventOptions.forEach(function (eventOptions) {\n                addRootEventListener(namespace, \n                /* event name: */ eventOptions[0], componentName, \n                /* handler: */ eventOptions[1], \n                /* selector: */ eventOptions[2]);\n            });\n        }\n        next(component);\n    });\n    addGondelPluginEventListener(\"unregister\", function (component, _a, next) {\n        var componentName = _a.componentName, namespace = _a.namespace;\n        removeRootEventListernerForComponent(namespace, componentName);\n        next(component);\n    });\n    addGondelPluginEventListener(\"start\", function (gondelComponents, _a, next) {\n        var newComponentNames = _a.newComponentNames, gondelComponentRegistry = _a.gondelComponentRegistry, namespace = _a.namespace;\n        newComponentNames.forEach(function (componentName) {\n            var gondelComponent = gondelComponentRegistry.getComponent(componentName);\n            // The decorator will store the event information in two different places.\n            // For ES6 classes it is using __events\n            // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\n            var componentEventOptions = (gondelComponent.prototype && gondelComponent.prototype.__events) ||\n                gondelComponent.__events;\n            if (componentEventOptions) {\n                componentEventOptions.forEach(function (eventOptions) {\n                    addRootEventListener(namespace, \n                    /* event name: */ eventOptions[0], componentName, \n                    /* handler: */ eventOptions[1], \n                    /* selector: */ eventOptions[2]);\n                });\n            }\n        });\n        next(gondelComponents);\n    });\n}\n/**\n * The @EventListener decorator will add all event names to a static variable\n */\nexport function EventListener(eventName, selector) {\n    return function (target, handler) {\n        if (!areEventsHookedIntoCore) {\n            hookEventDecoratorInCore();\n        }\n        if (handler.substr(0, 1) !== \"_\") {\n            throw new Error(\"Invalid handler name '\" + handler + \"' use '_\" + handler + \"' instead.\");\n        }\n        if (!target.__events) {\n            target.__events = [];\n        }\n        target.__events.push([eventName, handler, selector]);\n    };\n}\n//# sourceMappingURL=GondelDecorators.js.map","var GondelBaseComponent = /** @class */ (function () {\n    function GondelBaseComponent(domNode, componentName) {\n    }\n    /**\n     * Stop method\n     */\n    GondelBaseComponent.prototype.stop = function () { };\n    return GondelBaseComponent;\n}());\nexport { GondelBaseComponent };\n//# sourceMappingURL=GondelComponent.js.map"],"names":["basePluginListener","result","data","next","pluginEvents","window","__gondelPluginEvents","fireGondelPluginEvent","eventName","initialValue","callback","callbackResult","isSyncron","processedResult","Error","addGondelPluginEventListener","eventListenerCallback","previousEventHandler","modifiedResult","_","firstNext","triggerPublicEvent","gondelComponent","target","eventData","canBubble","event","document","createEvent","eventTarget","getFirstDomNode","_ctx","_namespace","charAt","toUpperCase","slice","initEvent","component","name","_componentName","namespace","dispatchEvent","noop","Deferred","_this","this","promise","Promise","resolve","startComponentsFromRegistry","gondelComponentRegistry","domContext","gondelDomNodeList","Array","prototype","call","querySelectorAll","hasAttribute","push","pristineGondelDomNodes","filter","gondelDomNode","hasOwnProperty","internalGondelAsyncRefAttribute","bootingDeferred","forEach","domNode","bootingFlag","registry","componentNameHelper","gondelComponents","map","componentName","getAttribute","GondelComponent","getComponent","undefined","componentInstance","stop","internalStopMethod","internalGondelRefAttribute","_stopped","bind","constructComponent","newComponentNames","Object","keys","_activeComponents","setActiveState","gondelComponentStartPromise","all","startConstructedComponent","then","sync","start","length","reject","_componentRegistries","GLOBAL_GONDEL_REGISTRY_NAMESPACE","GondelComponentRegistry","_components","_bootMode","registerComponent","unregisterComponent","isActive","setBootMode","bootMode","getComponentRegistry","boot","documentElement","readyState","addEventListener","args","arguments","nodeType","hasMountedGondelComponent","getComponentByDomNode","extractComponent","element","findComponents","components","attribute","nodes","i","node","gondelComponentInstance","_domEventRegistry","eventNameMapping","focus","blur","matchesCssSelector","selector","elementPrototype","Element","elementMatches","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","webkitMatchesSelector","handleEvent","attributeName","eventHandlerRegistry","handlers","eventObjectRequiresCleanup","results","_loop_1","handlerObject","handlerOptions","ctx","defineProperty","get","configurable","j","cancelBubble","handlerResult","handlerName","currentTarget","executeHandlers","parents","startElement","parentElement","getParentElements","selectorsOfFoundComponents","parent","index","handlerQueue","_a","selectorName","sort","handlerA","handlerB","getHandlers","getEventRegistry","addRootEventListener","domEventName","gondelComponentName","handlerOption","namespacedDomEventRegistry","eventRegistry","isNativeEvent","selectorKey","assign","areEventsHookedIntoCore","hookEventDecoratorInCore","componentEventOptions","__events","eventOptions","removeRootEventListernerForComponent","GondelBaseComponent","unshift","firstNode","constructor","handler","substr"],"mappings":"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"}